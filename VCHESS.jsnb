{
  "metadata": {
    "name": "VCHESS",
    "language_info": {
      "name": "JavaScipt",
      "version": "8.0"
    }
  },
  "jsnbversion": "v0.1",
  "cells": [
    {
      "code": "<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Chessboard with Rules</title>\n    <link rel=\"stylesheet\" href=\"https://unpkg.com/@chrisoakman/chessboardjs@1.0.0/dist/chessboard-1.0.0.min.css\" />\n    <script src=\"https://unpkg.com/@chrisoakman/chessboardjs@1.0.0/dist/chessboard-1.0.0.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/chess.js/0.12.0/chess.min.js\"></script>\n  </head>\n    \n  <body>\n\t<center><p id=\"status\"></p></center> <!-- Display the game status here -->\n    <div style=\"display: flex; align-items: center; justify-content: center; margin-top: 10px;\">\n        <!-- Buttons container aligned side by side -->\n        <div style=\"margin-right: 20px;\">\n            <button id=\"startBtn\" style=\"margin-right: 10px;\">Start Position</button>\n            <button id=\"clearBtn\">Clear Board</button>\n\t\t\t<button id=\"startVoiceControl\">Start Voice Control</button>\n\t\t\t<p>Say commands like \"move knight to f3\"</p>\n\t\t\t<div id=\"moveHistory\" style=\"margin-top: 20px; font-size: 18px;\">\n  <strong> Recent Moves:</strong>\n  <div id=\"movesList\"></div> <!-- Moves will be displayed here -->\n</div>\n        </div>\n        \n        <!-- Chessboard -->\n        <div id=\"board2\" style=\"width: 500px\"></div>\n    </div>\n\n</body>\n\n</html>",
      "status": "",
      "output": "\n  \n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Chessboard with Rules</title>\n    <link rel=\"stylesheet\" href=\"https://unpkg.com/@chrisoakman/chessboardjs@1.0.0/dist/chessboard-1.0.0.min.css\">\n    <script src=\"https://unpkg.com/@chrisoakman/chessboardjs@1.0.0/dist/chessboard-1.0.0.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/chess.js/0.12.0/chess.min.js\"></script>\n  \n    \n  \n\t<center><p id=\"status\">White to move</p></center> <!-- Display the game status here -->\n    <div style=\"display: flex; align-items: center; justify-content: center; margin-top: 10px;\">\n        <!-- Buttons container aligned side by side -->\n        <div style=\"margin-right: 20px;\">\n            <button id=\"startBtn\" style=\"margin-right: 10px;\">Start Position</button>\n            <button id=\"clearBtn\">Clear Board</button>\n\t\t\t<button id=\"startVoiceControl\">Start Voice Control</button>\n\t\t\t<p>Say commands like \"move knight to f3\"</p>\n\t\t\t<div id=\"moveHistory\" style=\"margin-top: 20px; font-size: 18px;\">\n  <strong> Recent Moves:</strong>\n  <div id=\"movesList\"></div> <!-- Moves will be displayed here -->\n</div>\n        </div>\n        \n        <!-- Chessboard -->\n        <div id=\"board2\" style=\"width: 500px\"><div class=\"chessboard-63f37\"><div class=\"board-b72b1\" style=\"width: 496px;\"><div class=\"row-5277c\"><div class=\"square-55d63 white-1e1d7 square-a8\" style=\"width:62px;height:62px;\" id=\"a8-12d1-f9a9-2504-7aa0-9e95-68b8-dffd-7f30\" data-square=\"a8\"><div class=\"notation-322f9 numeric-fc462\">8</div></div><div class=\"square-55d63 black-3c85d square-b8\" style=\"width:62px;height:62px;\" id=\"b8-edb3-584f-07d4-088e-c28b-89cb-0379-017d\" data-square=\"b8\"></div><div class=\"square-55d63 white-1e1d7 square-c8\" style=\"width:62px;height:62px;\" id=\"c8-0cf8-a583-eded-36c5-adb9-f3ab-19e2-06db\" data-square=\"c8\"></div><div class=\"square-55d63 black-3c85d square-d8\" style=\"width:62px;height:62px;\" id=\"d8-1604-90ab-66b4-4357-01d5-1a8c-e663-45f0\" data-square=\"d8\"></div><div class=\"square-55d63 white-1e1d7 square-e8\" style=\"width:62px;height:62px;\" id=\"e8-5205-dcdb-154b-4b05-7f4d-69e9-4594-9ca7\" data-square=\"e8\"></div><div class=\"square-55d63 black-3c85d square-f8\" style=\"width:62px;height:62px;\" id=\"f8-ce87-5202-ba8b-c2f2-9fc2-bff5-a0f2-ae13\" data-square=\"f8\"></div><div class=\"square-55d63 white-1e1d7 square-g8\" style=\"width:62px;height:62px;\" id=\"g8-d2e7-cc15-546d-457b-5968-e125-3cbd-9ebf\" data-square=\"g8\"></div><div class=\"square-55d63 black-3c85d square-h8\" style=\"width:62px;height:62px;\" id=\"h8-3116-5802-2cb5-aeb1-d1b8-730d-f4cd-5db4\" data-square=\"h8\"></div><div class=\"clearfix-7da63\"></div></div><div class=\"row-5277c\"><div class=\"square-55d63 black-3c85d square-a7\" style=\"width:62px;height:62px;\" id=\"a7-f742-2239-1f19-4bca-df78-620f-e581-83f7\" data-square=\"a7\"><div class=\"notation-322f9 numeric-fc462\">7</div></div><div class=\"square-55d63 white-1e1d7 square-b7\" style=\"width:62px;height:62px;\" id=\"b7-db47-3f93-3cdd-f533-6edd-ae98-57c9-9446\" data-square=\"b7\"></div><div class=\"square-55d63 black-3c85d square-c7\" style=\"width:62px;height:62px;\" id=\"c7-b9de-aa08-06c3-b9c4-4b27-b0e8-7ae2-33fe\" data-square=\"c7\"></div><div class=\"square-55d63 white-1e1d7 square-d7\" style=\"width:62px;height:62px;\" id=\"d7-99b2-5599-d1c3-a9a6-fdb4-8a8f-0f50-09d7\" data-square=\"d7\"></div><div class=\"square-55d63 black-3c85d square-e7\" style=\"width:62px;height:62px;\" id=\"e7-79e1-7f93-9365-d28d-0479-0e20-6860-3c0a\" data-square=\"e7\"></div><div class=\"square-55d63 white-1e1d7 square-f7\" style=\"width:62px;height:62px;\" id=\"f7-0db5-8a9d-9265-5f63-d23c-1f33-4f46-80fb\" data-square=\"f7\"></div><div class=\"square-55d63 black-3c85d square-g7\" style=\"width:62px;height:62px;\" id=\"g7-9058-3634-fd28-07b4-6c49-a6c5-2182-0053\" data-square=\"g7\"></div><div class=\"square-55d63 white-1e1d7 square-h7\" style=\"width:62px;height:62px;\" id=\"h7-3ec9-7d04-2bd7-6ce4-279c-4891-9381-8345\" data-square=\"h7\"></div><div class=\"clearfix-7da63\"></div></div><div class=\"row-5277c\"><div class=\"square-55d63 white-1e1d7 square-a6\" style=\"width:62px;height:62px;\" id=\"a6-9b81-b179-5765-162f-2d0e-6b7c-68a8-294b\" data-square=\"a6\"><div class=\"notation-322f9 numeric-fc462\">6</div></div><div class=\"square-55d63 black-3c85d square-b6\" style=\"width:62px;height:62px;\" id=\"b6-dba2-e453-bb4c-31f5-4bf3-1370-435e-2468\" data-square=\"b6\"></div><div class=\"square-55d63 white-1e1d7 square-c6\" style=\"width:62px;height:62px;\" id=\"c6-9780-d3fa-f48c-d5d1-3442-24e8-14be-88f5\" data-square=\"c6\"></div><div class=\"square-55d63 black-3c85d square-d6\" style=\"width:62px;height:62px;\" id=\"d6-4662-816b-6a10-7441-957e-c6af-368f-22c1\" data-square=\"d6\"></div><div class=\"square-55d63 white-1e1d7 square-e6\" style=\"width:62px;height:62px;\" id=\"e6-bc3f-4491-c54a-eb27-aaa5-b5e9-05b5-54c0\" data-square=\"e6\"></div><div class=\"square-55d63 black-3c85d square-f6\" style=\"width:62px;height:62px;\" id=\"f6-fab2-4045-eea7-4ea9-41a3-a38c-8562-9894\" data-square=\"f6\"></div><div class=\"square-55d63 white-1e1d7 square-g6\" style=\"width:62px;height:62px;\" id=\"g6-e93d-9c7f-b26a-dabf-1f47-b64f-48c5-e2d8\" data-square=\"g6\"></div><div class=\"square-55d63 black-3c85d square-h6\" style=\"width:62px;height:62px;\" id=\"h6-8ab2-d264-efbd-fdc9-9129-30b8-6ec8-8f56\" data-square=\"h6\"></div><div class=\"clearfix-7da63\"></div></div><div class=\"row-5277c\"><div class=\"square-55d63 black-3c85d square-a5\" style=\"width:62px;height:62px;\" id=\"a5-0492-b48e-9690-1e21-6521-9a6d-77f6-612f\" data-square=\"a5\"><div class=\"notation-322f9 numeric-fc462\">5</div></div><div class=\"square-55d63 white-1e1d7 square-b5\" style=\"width:62px;height:62px;\" id=\"b5-4b47-ec62-ced6-d41d-5493-2977-9b82-621b\" data-square=\"b5\"></div><div class=\"square-55d63 black-3c85d square-c5\" style=\"width:62px;height:62px;\" id=\"c5-9e19-33f4-03b1-afe9-5fdf-94ad-d9e2-0a57\" data-square=\"c5\"></div><div class=\"square-55d63 white-1e1d7 square-d5\" style=\"width:62px;height:62px;\" id=\"d5-a35d-68cf-932e-1d2c-f6f0-a562-1a09-378a\" data-square=\"d5\"></div><div class=\"square-55d63 black-3c85d square-e5\" style=\"width:62px;height:62px;\" id=\"e5-3a85-a212-ad6d-33d2-1623-7271-1c2c-ecc7\" data-square=\"e5\"></div><div class=\"square-55d63 white-1e1d7 square-f5\" style=\"width:62px;height:62px;\" id=\"f5-7fb1-7abd-21fd-1193-1ee1-92c6-1da9-fb3c\" data-square=\"f5\"></div><div class=\"square-55d63 black-3c85d square-g5\" style=\"width:62px;height:62px;\" id=\"g5-8722-84b6-26d3-40de-da40-21ba-550a-ac05\" data-square=\"g5\"></div><div class=\"square-55d63 white-1e1d7 square-h5\" style=\"width:62px;height:62px;\" id=\"h5-12d0-84d3-66bd-db4e-57c2-2d5f-f8a5-c77f\" data-square=\"h5\"></div><div class=\"clearfix-7da63\"></div></div><div class=\"row-5277c\"><div class=\"square-55d63 white-1e1d7 square-a4\" style=\"width:62px;height:62px;\" id=\"a4-2a0d-c869-2f42-b765-4e0f-e54d-005c-d374\" data-square=\"a4\"><div class=\"notation-322f9 numeric-fc462\">4</div></div><div class=\"square-55d63 black-3c85d square-b4\" style=\"width:62px;height:62px;\" id=\"b4-af05-a069-ea9d-cab6-6244-df22-8860-bf22\" data-square=\"b4\"></div><div class=\"square-55d63 white-1e1d7 square-c4\" style=\"width:62px;height:62px;\" id=\"c4-9526-3700-9e15-aa5c-1268-00cf-7371-e2d7\" data-square=\"c4\"></div><div class=\"square-55d63 black-3c85d square-d4\" style=\"width:62px;height:62px;\" id=\"d4-36d3-5702-56b1-6288-ff04-bde8-5ec6-0b4a\" data-square=\"d4\"></div><div class=\"square-55d63 white-1e1d7 square-e4\" style=\"width:62px;height:62px;\" id=\"e4-635c-bdf2-2101-8489-e282-fccc-bee5-2722\" data-square=\"e4\"></div><div class=\"square-55d63 black-3c85d square-f4\" style=\"width:62px;height:62px;\" id=\"f4-1fdf-f76c-9d23-9566-00ee-5870-de20-2620\" data-square=\"f4\"></div><div class=\"square-55d63 white-1e1d7 square-g4\" style=\"width:62px;height:62px;\" id=\"g4-c3dc-6cab-42a7-950a-2d38-0f49-2d1e-76cc\" data-square=\"g4\"></div><div class=\"square-55d63 black-3c85d square-h4\" style=\"width:62px;height:62px;\" id=\"h4-d269-ca13-189e-c533-f0e3-8bb5-18fa-5c88\" data-square=\"h4\"></div><div class=\"clearfix-7da63\"></div></div><div class=\"row-5277c\"><div class=\"square-55d63 black-3c85d square-a3\" style=\"width:62px;height:62px;\" id=\"a3-7a43-7d0d-a7c5-c754-6de9-5a26-aaba-2e9f\" data-square=\"a3\"><div class=\"notation-322f9 numeric-fc462\">3</div></div><div class=\"square-55d63 white-1e1d7 square-b3\" style=\"width:62px;height:62px;\" id=\"b3-5b69-2cfd-ce6f-0ee1-58e6-3414-9a78-041a\" data-square=\"b3\"></div><div class=\"square-55d63 black-3c85d square-c3\" style=\"width:62px;height:62px;\" id=\"c3-ca4f-eb3c-cbc0-d7d7-ac9c-a740-1aad-26de\" data-square=\"c3\"></div><div class=\"square-55d63 white-1e1d7 square-d3\" style=\"width:62px;height:62px;\" id=\"d3-79b7-82c2-9c36-9d01-971e-9e3b-c00d-4569\" data-square=\"d3\"></div><div class=\"square-55d63 black-3c85d square-e3\" style=\"width:62px;height:62px;\" id=\"e3-55aa-cfab-0ee1-5181-8454-e172-2c98-ff46\" data-square=\"e3\"></div><div class=\"square-55d63 white-1e1d7 square-f3\" style=\"width:62px;height:62px;\" id=\"f3-48d5-3e8b-78b6-793d-6056-17fb-93ec-eb71\" data-square=\"f3\"></div><div class=\"square-55d63 black-3c85d square-g3\" style=\"width:62px;height:62px;\" id=\"g3-10bc-32d7-ab04-cb78-54f6-b0ea-c109-5199\" data-square=\"g3\"></div><div class=\"square-55d63 white-1e1d7 square-h3\" style=\"width:62px;height:62px;\" id=\"h3-656e-508f-4113-4432-e951-fa3c-7dca-37da\" data-square=\"h3\"></div><div class=\"clearfix-7da63\"></div></div><div class=\"row-5277c\"><div class=\"square-55d63 white-1e1d7 square-a2\" style=\"width:62px;height:62px;\" id=\"a2-2cd2-abe0-f514-376c-4f07-af2a-9614-8b61\" data-square=\"a2\"><div class=\"notation-322f9 numeric-fc462\">2</div></div><div class=\"square-55d63 black-3c85d square-b2\" style=\"width:62px;height:62px;\" id=\"b2-594c-358c-aa9d-ca05-c089-cf6a-8831-9b03\" data-square=\"b2\"></div><div class=\"square-55d63 white-1e1d7 square-c2\" style=\"width:62px;height:62px;\" id=\"c2-4d45-2320-4c3d-2a77-a8c1-65b4-65dc-3850\" data-square=\"c2\"></div><div class=\"square-55d63 black-3c85d square-d2\" style=\"width:62px;height:62px;\" id=\"d2-eb10-4bb1-a18d-3872-d8ad-534f-9d63-a750\" data-square=\"d2\"></div><div class=\"square-55d63 white-1e1d7 square-e2\" style=\"width:62px;height:62px;\" id=\"e2-714a-3f64-94cc-bfbc-5092-91b2-74aa-07b0\" data-square=\"e2\"></div><div class=\"square-55d63 black-3c85d square-f2\" style=\"width:62px;height:62px;\" id=\"f2-c1ea-6380-de54-b0d9-bad6-0261-2f76-cde4\" data-square=\"f2\"></div><div class=\"square-55d63 white-1e1d7 square-g2\" style=\"width:62px;height:62px;\" id=\"g2-2ba7-ce72-fb59-c9bf-e4bd-2aba-ebd4-2ce7\" data-square=\"g2\"></div><div class=\"square-55d63 black-3c85d square-h2\" style=\"width:62px;height:62px;\" id=\"h2-0b19-6a62-7016-8ce4-7646-46e3-b335-4b8b\" data-square=\"h2\"></div><div class=\"clearfix-7da63\"></div></div><div class=\"row-5277c\"><div class=\"square-55d63 black-3c85d square-a1\" style=\"width:62px;height:62px;\" id=\"a1-fa66-f0ab-e343-1dd6-cffa-b12c-2635-d027\" data-square=\"a1\"><div class=\"notation-322f9 alpha-d2270\">a</div><div class=\"notation-322f9 numeric-fc462\">1</div></div><div class=\"square-55d63 white-1e1d7 square-b1\" style=\"width:62px;height:62px;\" id=\"b1-dc36-b8d7-6ba4-90a7-bf2b-f691-da66-e4b8\" data-square=\"b1\"><div class=\"notation-322f9 alpha-d2270\">b</div></div><div class=\"square-55d63 black-3c85d square-c1\" style=\"width:62px;height:62px;\" id=\"c1-95d0-6ba3-38bf-26ce-f6bb-52d3-ad87-d3eb\" data-square=\"c1\"><div class=\"notation-322f9 alpha-d2270\">c</div></div><div class=\"square-55d63 white-1e1d7 square-d1\" style=\"width:62px;height:62px;\" id=\"d1-4d6b-e048-01a5-6180-65b7-a8ba-81f2-120a\" data-square=\"d1\"><div class=\"notation-322f9 alpha-d2270\">d</div></div><div class=\"square-55d63 black-3c85d square-e1\" style=\"width:62px;height:62px;\" id=\"e1-58bf-9aff-0805-0e12-2da9-37f6-3a1f-ecbf\" data-square=\"e1\"><div class=\"notation-322f9 alpha-d2270\">e</div></div><div class=\"square-55d63 white-1e1d7 square-f1\" style=\"width:62px;height:62px;\" id=\"f1-65ab-aa31-5cdf-1ebd-b748-b77b-1ca1-ddc1\" data-square=\"f1\"><div class=\"notation-322f9 alpha-d2270\">f</div></div><div class=\"square-55d63 black-3c85d square-g1\" style=\"width:62px;height:62px;\" id=\"g1-dfe1-69dd-f23e-9490-a662-c55d-0996-e487\" data-square=\"g1\"><div class=\"notation-322f9 alpha-d2270\">g</div></div><div class=\"square-55d63 white-1e1d7 square-h1\" style=\"width:62px;height:62px;\" id=\"h1-9763-3957-b6bc-f158-50f0-e541-3943-76a5\" data-square=\"h1\"><div class=\"notation-322f9 alpha-d2270\">h</div></div><div class=\"clearfix-7da63\"></div></div></div></div></div>\n    </div>\n\n\n\n",
      "type": "html"
    },
    {
      "code": "<style>\n  #status {\n            font-size: 24px;\n            font-weight: bold;\n            margin-top: 20px;\n            text-align: center;\n        }\n\n        /* Default color for the status message */\n        #status.default {\n            color: #333;\n        }\n\n        /* White's turn */\n        #status.white-turn {\n            color: white;\n            background-color: #333;\n            padding: 10px;\n        }\n\n        /* Black's turn */\n        #status.black-turn {\n            color: black;\n            background-color: #ddd;\n            padding: 10px;\n        }\n\n        /* Game over with checkmate */\n        #status.checkmate {\n            color: white;\n            background-color: red;\n            padding: 15px;\n            font-size: 28px;\n        }\n\n        /* Game over with draw/stalemate */\n        #status.draw {\n            color: black;\n            background-color: yellow;\n            padding: 15px;\n            font-size: 28px;\n        }\n</style>",
      "status": "",
      "output": "<style>\n  #status {\n            font-size: 24px;\n            font-weight: bold;\n            margin-top: 20px;\n            text-align: center;\n        }\n\n        /* Default color for the status message */\n        #status.default {\n            color: #333;\n        }\n\n        /* White's turn */\n        #status.white-turn {\n            color: white;\n            background-color: #333;\n            padding: 10px;\n        }\n\n        /* Black's turn */\n        #status.black-turn {\n            color: black;\n            background-color: #ddd;\n            padding: 10px;\n        }\n\n        /* Game over with checkmate */\n        #status.checkmate {\n            color: white;\n            background-color: red;\n            padding: 15px;\n            font-size: 28px;\n        }\n\n        /* Game over with draw/stalemate */\n        #status.draw {\n            color: black;\n            background-color: yellow;\n            padding: 15px;\n            font-size: 28px;\n        }\n</style>",
      "type": "html"
    },
    {
      "code": "await scrib.loadScript(\"https://code.jquery.com/jquery-3.5.1.min.js\");\nawait scrib.loadScript(\"https://unpkg.com/@chrisoakman/chessboardjs@1.0.0/dist/chessboard-1.0.0.min.js\");\nawait scrib.loadScript(\"https://cdnjs.cloudflare.com/ajax/libs/chess.js/0.10.3/chess.min.js\")\nawait scrib.loadCSS(\"https://unpkg.com/@chrisoakman/chessboardjs@1.0.0/dist/chessboard-1.0.0.min.css\");\n<!-- Add Firebase SDK (for Realtime Database) -->\nawait scrib.loadScript(\"https://www.gstatic.com/firebasejs/9.6.0/firebase-app.js\");\nawait scrib.loadScript(\"https://www.gstatic.com/firebasejs/9.6.0/firebase-database.js\");\nawait scrib.loadScript(\"https://www.gstatic.com/firebasejs/9.6.0/firebase-auth.js\");\nawait scrib.loadScript(\"https://www.gstatic.com/firebasejs/9.6.0/firebase-firestore.js\");\n\n",
      "status": "[89]<br><span style=\"font-size:8px\">113ms<span></span></span>",
      "output": "",
      "type": "code"
    },
    {
      "code": "\n\n\n  const firebaseConfig = {\n    apiKey: \"AIzaSyAJrRZ6xehvVQk0PuCMhsVNfeNsJzXVmCY\",\n    authDomain: \"vchess-82304.firebaseapp.com\",\n    databaseURL: \"https://vchess-82304-default-rtdb.asia-southeast1.firebasedatabase.app\",\n    projectId: \"vchess-82304\",\n    storageBucket: \"vchess-82304.firebasestorage.app\",\n    messagingSenderId: \"630416421002\",\n    appId: \"1:630416421002:web:604dabeccb74ac778f7d73\",\n    measurementId: \"G-YF3S8Y3FPK\"\n  };\n\n  // Initialize Firebase\n  const app = firebase.initializeApp(firebaseConfig);\n  const analytics = getAnalytics(app);\n/*\ndatabase.ref('users/1').set({\n  username: 'testuser',\n  email: 'testuser@example.com',\n});\n*/\n",
      "status": "[-]",
      "output": "<p class=\"error\">firebase is not defined</p>",
      "type": "code"
    },
    {
      "code": "<style>\n        /* Status message styles */\n        #status {\n            font-size: 24px;\n            font-weight: bold;\n            margin-top: 20px;\n            text-align: center;\n        }\n\n        /* Default color for the status message */\n        #status.default {\n            color: #333;\n        }\n\n        /* White's turn */\n        #status.white-turn {\n            color: white;\n            background-color: #333;\n            padding: 10px;\n        }\n\n        /* Black's turn */\n        #status.black-turn {\n            color: black;\n            background-color: #ddd;\n            padding: 10px;\n        }\n\n        /* Game over with checkmate */\n        #status.checkmate {\n            color: white;\n            background-color: red;\n            padding: 15px;\n            font-size: 28px;\n        }\n\n        /* Game over with draw/stalemate */\n        #status.draw {\n            color: black;\n            background-color: yellow;\n            padding: 15px;\n            font-size: 28px;\n        }\n    </style>",
      "status": "",
      "output": "<style>\n        /* Status message styles */\n        #status {\n            font-size: 24px;\n            font-weight: bold;\n            margin-top: 20px;\n            text-align: center;\n        }\n\n        /* Default color for the status message */\n        #status.default {\n            color: #333;\n        }\n\n        /* White's turn */\n        #status.white-turn {\n            color: white;\n            background-color: #333;\n            padding: 10px;\n        }\n\n        /* Black's turn */\n        #status.black-turn {\n            color: black;\n            background-color: #ddd;\n            padding: 10px;\n        }\n\n        /* Game over with checkmate */\n        #status.checkmate {\n            color: white;\n            background-color: red;\n            padding: 15px;\n            font-size: 28px;\n        }\n\n        /* Game over with draw/stalemate */\n        #status.draw {\n            color: black;\n            background-color: yellow;\n            padding: 15px;\n            font-size: 28px;\n        }\n    </style>",
      "type": "html"
    },
    {
      "code": "\n    var board2 = ChessBoard('board2', {\n      draggable: true,\n      pieceTheme: 'https://chessboardjs.com/img/chesspieces/alpha/{piece}.png',\n      dropOffBoard: 'trash',\n      onDragStart: onDragStart,\n      onDrop: onDrop,\n      onSnapEnd: onSnapEnd\n    });\n\n    var game = new Chess();\n    var gameOver = false; // Flag to track if the game is over\n\n    // Function to prevent illegal moves or moves by the wrong player\n    function onDragStart(source, piece, position, orientation) {\n      if (gameOver) return false; // Disable dragging if the game is over\n      if ((game.turn() === 'w' && piece.startsWith('b')) || \n          (game.turn() === 'b' && piece.startsWith('w'))) {\n        return false;\n      }\n    }\n\n    // Function to handle piece drop and validate move\n    function onDrop(source, target) {\n      if (gameOver) return 'snapback'; // Disable dropping if the game is over\n\n      var move = game.move({\n        from: source,\n        to: target,\n        promotion: 'q'  // Auto-promote to queen for simplicity\n      });\n\n      if (move === null) return 'snapback';  // Illegal move\n      updateStatus();  // Update game status after each valid move\n      updateMoveHistory(move.san);  // Add the move to the move history\n    }\n\n    // Sync board position with game state after each move\n    function onSnapEnd() {\n      board2.position(game.fen());\n    }\n\n    // Function to update board and game status\n    function updateStatus() {\n      var status = '';\n\n      if (game.in_checkmate()) {\n        status = 'Game over, ' + (game.turn() === 'w' ? 'White' : 'Black') + ' is in checkmate.';\n        gameOver = true; // Set game over flag\n      } else if (game.in_draw() || game.in_stalemate() || game.in_threefold_repetition() || game.insufficient_material()) {\n        status = 'Game over, it\\'s a draw!';\n        gameOver = true; // Set game over flag\n      } else {\n        status = (game.turn() === 'w' ? 'White' : 'Black') + ' to move';\n        if (game.in_check()) {\n          status += ', in check!';\n        }\n      }\n\n      document.getElementById('status').innerText = status; // Display status message\n    }\n\n    // Function to update move history display\n    var moveHistory = []; // To store the move history\n\n    function updateMoveHistory(move) {\n  // Add the move to the history\n  moveHistory.push(move);\n\n  // Keep only the most recent 8 moves\n  if (moveHistory.length > 8) {\n    moveHistory.shift(); // Remove the oldest move\n  }\n\n  // Update the move list display\n  var movesList = document.getElementById('movesList');\n  movesList.innerHTML = ''; // Clear the current move list\n\n  // Iterate over the history and display moves in the required format\n  moveHistory.forEach(function (move, index) {\n    // If it's the first move (index 0), calculate the turn explicitly\n    var currentTurn = (index % 2 === 0) ? 'w' : 'b'; // White moves first (even index is white)\n\n    // Get the color and piece from the move and format it\n    var moveText = formatMove(move, currentTurn); // Use calculated turn for formatting\n    var moveItem = document.createElement('div');\n    moveItem.textContent = moveText;\n    movesList.appendChild(moveItem);\n  });\n}\n\n\n    // Format the move as \"white-pawn-d6\" or \"black-pawn-d5\"\nfunction formatMove(move, turn) {\n  // Determine the color of the player making the move\n  var color = (turn === 'w') ? 'white' : 'black'; // 'w' for white and 'b' for black\n  \n  // Map the first character to the piece type\n  var piece;\n  var moveIndex = 0;  // To track if the move starts with a piece character\n  \n  // Check if the first character is a valid piece (Knight, Rook, King, Queen)\n  if (move.charAt(0) === 'N') {\n    piece = 'knight';\n    moveIndex = 1;  // Skip the first character (since it's part of the piece)\n  } else if (move.charAt(0) === 'R') {\n    piece = 'rook';\n    moveIndex = 1;\n  } else if (move.charAt(0) === 'K') {\n    piece = 'king';\n    moveIndex = 1;\n  } else if (move.charAt(0) === 'Q') {\n    piece = 'queen';\n    moveIndex = 1;\n  } else if (move.charAt(0) === 'B') {\n    piece = 'bishop';\n    moveIndex = 1;\n  } else {\n    piece = 'pawn';  // If no piece character, it's a pawn\n    moveIndex = 0;  // No need to skip any character\n  }\n\n  // Remove any capture or check symbols for easier parsing\n  var cleanedMove = move.replace(/[x+]/g, ''); // Remove 'x' (captures) and '+' (checks)\n\n  // Determine the target square (last two characters of the move)\n  var targetSquare = cleanedMove.slice(-2);\n\n  // Handle pawn captures and simple moves\n  if (piece === 'pawn') {\n    if (move.length > 3) {\n      // Pawn capture move (e.g., e5xd6 -> white-pawn-e5-x-d6)\n      var captureSquare = move.slice(2, 4);  // Capture destination (e.g., \"d6\" in e5xd6)\n      return color + '-pawn-' + '-x-' + captureSquare;\n    } else {\n      // Simple pawn move (e.g., e2-e4 -> white-pawn-e4)\n      return color + '-pawn-' + targetSquare;\n    }\n  } else {\n    // Handle non-pawn pieces (e.g., Knight, Rook, etc.)\n    var capture = move.includes('x'); // Check if it's a capture (e.g., Rxd4)\n\n    if (capture) {\n      // Format capture moves (e.g., Rook capture: Rxd5 -> white-rook-d4-x-d5)\n      return color + '-' + piece + '-' + '-x-' + targetSquare;\n    } else {\n      // Non-capture piece move (e.g., Knight move: Nf3 -> white-knight-f3)\n      return color + '-' + piece + '-' + targetSquare;\n    }\n  }\n}\n\n\n\n\n    // Button controls to reset and clear the board\n    document.getElementById('startBtn').addEventListener('click', function() {\n      game.reset();  // Reset chess game\n      board2.start(); // Reset chessboard visualization\n      gameOver = false; // Reset game over flag\n      updateStatus(); // Update the status\n      document.getElementById('movesList').innerHTML = '';  // Clear the move history\n\t  moveHistory = [];\n    });\n\n    document.getElementById('clearBtn').addEventListener('click', function() {\n      game.clear();   // Clear chess game\n      board2.clear(); // Clear chessboard visualization\n      gameOver = false; // Reset game over flag\n      document.getElementById('status').innerText = 'Board cleared.'; // Clear status\n      document.getElementById('movesList').innerHTML = '';  // Clear the move history\n    });\n\n    updateStatus();",
      "status": "[90]<br><span style=\"font-size:8px\">31ms<span></span></span>",
      "output": "",
      "type": "code"
    },
    {
      "code": "// Initialize SpeechRecognition and set properties\nvar SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\nvar recognition = new SpeechRecognition();\nrecognition.lang = 'en-US';\nrecognition.interimResults = false;\nrecognition.maxAlternatives = 1;\n\n// Set flags to manage the state\nlet isRecognitionActive = false;\n\n// Handle recognition errors\nrecognition.onerror = function(event) {\n  console.error(\"Speech recognition error:\", event.error);\n  scrib.show(\"Speech recognition error:\", event.error);\n};\n\n// Handle start and end events\nrecognition.onstart = function() {\n  isRecognitionActive = true;\n  console.log(\"Speech recognition started.\");\n  scrib.show(\"Speech recognition started. Please speak your move.\");\n};\n\nrecognition.onend = function() {\n  isRecognitionActive = false;\n  console.log(\"Speech recognition stopped.\");\n  scrib.show(\"Speech recognition stopped.\");\n};\n\n// Handle speech results\nrecognition.onresult = function(event) {\n  var transcript = event.results[0][0].transcript.toLowerCase();\n  console.log(\"Voice command received:\", transcript);\n  scrib.show(\"Voice command received:\", transcript);\n  processVoiceCommand(transcript);\n};\n\n// Function to start recognition safely\nfunction startRecognition() {\n  if (isRecognitionActive) {\n    recognition.stop(); // Stop recognition if already active\n  }\n  recognition.start(); // Start recognition\n}\n\n// Start listening on a button click\ndocument.getElementById('startVoiceControl').addEventListener('click', function() {\n  startRecognition();\n  console.log(\"Voice control started. Please speak your move.\");\n  scrib.show(\"Voice control started. Please speak your move.\");\n});\n\n// Process voice command and handle moves\nfunction processVoiceCommand(command) {\n  // Regular expression to capture the \"source to target\" pattern (e.g., 'e2 to e3' for pawn moves)\n  var movePattern = /([a-h][1-8])\\s+to\\s+([a-h][1-8])/;\n\n  // Check if the voice command includes a move pattern like 'e2 to e3'\n  var moveMatch = command.match(movePattern);\n\n  if (moveMatch) {\n    var sourceSquare = moveMatch[1];\n    var targetSquare = moveMatch[2];\n\n    // Assume pawn as the default piece if no specific piece is mentioned\n    var piece = 'pawn'; // Default to pawn if no piece is mentioned\n\n    // Map the pieces to their chess notation (e.g., pawn = '')\n    var pieceNotation = {\n      pawn: '', // Pawn doesn't need a letter in chess notation\n      knight: 'N',\n      bishop: 'B',\n      rook: 'R',\n      queen: 'Q',\n      king: 'K'\n    };\n\n    var pieceSymbol = pieceNotation[piece.toLowerCase()];\n\n    // Now find the source square for the piece\n    var sourceSquareFound = findSourceSquare(pieceSymbol, targetSquare);\n\n    if (sourceSquareFound) {\n      var move = game.move({\n        from: sourceSquareFound,\n        to: targetSquare,\n        promotion: 'q' // Automatically promote pawn to queen\n      });\n\n      if (move) {\n        // Successfully made a move: update the board and status\n        board2.position(game.fen());\n        updateStatus();\n        updateMoveHistory(move.san);\n        scrib.show(`Move executed: ${piece} from ${sourceSquare} to ${targetSquare}`);\n      } else {\n        // If move is not valid, show an error\n        scrib.show(\"Illegal move. Try again.\");\n        console.error(\"Illegal move attempted:\", sourceSquare, \"to\", targetSquare);\n      }\n    } else {\n      scrib.show(\"Couldn't determine source square. Try again.\");\n    }\n  } else {\n    scrib.show(\"Invalid command format. Please say moves like 'e2 to e3'.\");\n  }\n}\n\n// Find source square for specified piece and target\nfunction findSourceSquare(piece, targetSquare) {\n  var moves = game.moves({ verbose: true });\n  var matchingMoves = moves.filter(function(m) {\n    return m.piece === piece.toLowerCase() && m.to === targetSquare;\n  });\n  return matchingMoves.length > 0 ? matchingMoves[0].from : null;\n}\n\n// Chessboard and game event functions\nfunction onDragStart(source, piece) {\n  if (gameOver) return false;\n  if ((game.turn() === 'w' && piece.startsWith('b')) ||\n    (game.turn() === 'b' && piece.startsWith('w'))) {\n    return false;\n  }\n}\n\nfunction onDrop(source, target) {\n  if (gameOver) return 'snapback';\n\n  var move = game.move({\n    from: source,\n    to: target,\n    promotion: 'q'\n  });\n\n  if (move === null) return 'snapback';\n  updateStatus();\n  updateMoveHistory(move.san);\n}\n\nfunction onSnapEnd() {\n  board2.position(game.fen());\n}\n\nfunction updateStatus() {\n  var status = '';\n  if (game.in_checkmate()) {\n    status = 'Game over, ' + (game.turn() === 'w' ? 'White' : 'Black') + ' is in checkmate.';\n    gameOver = true;\n  } else if (game.in_draw() || game.in_stalemate() || game.in_threefold_repetition() || game.insufficient_material()) {\n    status = 'Game over, it\\'s a draw!';\n    gameOver = true;\n  } else {\n    status = (game.turn() === 'w' ? 'White' : 'Black') + ' to move';\n    if (game.in_check()) status += ', in check!';\n  }\n  document.getElementById('status').innerText = status;\n}\n\n// Update move history\nvar moveHistory = []; // To store the move history\n\nfunction updateMoveHistory(move) {\n  // Add the move to the history\n  moveHistory.push(move);\n\n  // Keep only the most recent 8 moves\n  if (moveHistory.length > 8) {\n    moveHistory.shift(); // Remove the oldest move\n  }\n\n  // Update the move list display\n  var movesList = document.getElementById('movesList');\n  movesList.innerHTML = ''; // Clear the current move list\n\n  // Iterate over the history and display moves in the required format\n  moveHistory.forEach(function (move, index) {\n    var currentTurn = (index % 2 === 0) ? 'w' : 'b'; // White moves first (even index is white)\n    var moveText = formatMove(move, currentTurn); // Use calculated turn for formatting\n    var moveItem = document.createElement('div');\n    moveItem.textContent = moveText;\n    movesList.appendChild(moveItem);\n  });\n}\n\n// Format the move as \"white-pawn-e4\" for pawn moves\nfunction formatMove(move, turn) {\n  var color = (turn === 'w') ? 'white' : 'black'; // 'w' for white and 'b' for black\n  var piece = 'pawn';  // For simplicity, we're treating all moves as pawns in this example\n  var targetSquare = move.slice(-2);\n\n  return color + '-pawn-' + targetSquare;\n}\n",
      "status": "[91]<br><span style=\"font-size:8px\">0ms<span></span></span>",
      "output": "",
      "type": "code"
    }
  ],
  "source": "https://github.com/gopi-suvanam/jsnb",
  "run_on_load": false
}