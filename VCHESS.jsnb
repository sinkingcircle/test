{
  "metadata": {
    "name": "VCHESS",
    "language_info": {
      "name": "JavaScipt",
      "version": "8.0"
    }
  },
  "jsnbversion": "v0.1",
  "cells": [
    {
      "code": "<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Chessboard with Rules</title>\n    <link rel=\"stylesheet\" href=\"https://unpkg.com/@chrisoakman/chessboardjs@1.0.0/dist/chessboard-1.0.0.min.css\" />\n    <script src=\"https://unpkg.com/@chrisoakman/chessboardjs@1.0.0/dist/chessboard-1.0.0.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/chess.js/0.12.0/chess.min.js\"></script>\n  </head>\n    \n  <body>\n\t<center><p id=\"status\"></p></center> <!-- Display the game status here -->\n    <div style=\"display: flex; align-items: center; justify-content: center; margin-top: 10px;\">\n        <!-- Buttons container aligned side by side -->\n        <div style=\"margin-right: 20px;\">\n            <button id=\"startBtn\" style=\"margin-right: 10px;\">Start Position</button>\n            <button id=\"clearBtn\">Clear Board</button>\n\t\t\t<button id=\"startVoiceControl\">Start Voice Control</button>\n\t\t\t<p>Say commands like \"move knight to f3\"</p>\n\t\t\t<div id=\"moveHistory\" style=\"margin-top: 20px; font-size: 18px;\">\n  <strong> Recent Moves:</strong>\n  <div id=\"movesList\"></div> <!-- Moves will be displayed here -->\n</div>\n        </div>\n        \n        <!-- Chessboard -->\n        <div id=\"board2\" style=\"width: 500px\"></div>\n    </div>\n\n</body>\n\n</html>",
      "status": "",
      "output": "\n  \n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Chessboard with Rules</title>\n    <link rel=\"stylesheet\" href=\"https://unpkg.com/@chrisoakman/chessboardjs@1.0.0/dist/chessboard-1.0.0.min.css\">\n    <script src=\"https://unpkg.com/@chrisoakman/chessboardjs@1.0.0/dist/chessboard-1.0.0.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/chess.js/0.12.0/chess.min.js\"></script>\n  \n    \n  \n\t<center><p id=\"status\">White to move</p></center> <!-- Display the game status here -->\n    <div style=\"display: flex; align-items: center; justify-content: center; margin-top: 10px;\">\n        <!-- Buttons container aligned side by side -->\n        <div style=\"margin-right: 20px;\">\n            <button id=\"startBtn\" style=\"margin-right: 10px;\">Start Position</button>\n            <button id=\"clearBtn\">Clear Board</button>\n\t\t\t<button id=\"startVoiceControl\">Start Voice Control</button>\n\t\t\t<p>Say commands like \"move knight to f3\"</p>\n\t\t\t<div id=\"moveHistory\" style=\"margin-top: 20px; font-size: 18px;\">\n  <strong> Recent Moves:</strong>\n  <div id=\"movesList\"></div> <!-- Moves will be displayed here -->\n</div>\n        </div>\n        \n        <!-- Chessboard -->\n        <div id=\"board2\" style=\"width: 500px\"><div class=\"chessboard-63f37\"><div class=\"board-b72b1\" style=\"width: 496px;\"><div class=\"row-5277c\"><div class=\"square-55d63 white-1e1d7 square-a8\" style=\"width:62px;height:62px;\" id=\"a8-a0aa-3c3c-0b8e-1861-90c7-2210-f9a0-0595\" data-square=\"a8\"><div class=\"notation-322f9 numeric-fc462\">8</div></div><div class=\"square-55d63 black-3c85d square-b8\" style=\"width:62px;height:62px;\" id=\"b8-1ec6-0071-4809-38f2-cd2b-e8ba-239b-aeee\" data-square=\"b8\"></div><div class=\"square-55d63 white-1e1d7 square-c8\" style=\"width:62px;height:62px;\" id=\"c8-0c2f-651d-ba66-6fb8-cfc6-9558-ad94-99aa\" data-square=\"c8\"></div><div class=\"square-55d63 black-3c85d square-d8\" style=\"width:62px;height:62px;\" id=\"d8-fe75-5834-d709-a6f7-e0e6-8935-17e8-2e8f\" data-square=\"d8\"></div><div class=\"square-55d63 white-1e1d7 square-e8\" style=\"width:62px;height:62px;\" id=\"e8-0659-338c-7616-3cc5-b3e1-6aa7-725f-8c53\" data-square=\"e8\"></div><div class=\"square-55d63 black-3c85d square-f8\" style=\"width:62px;height:62px;\" id=\"f8-8732-3261-55c4-64eb-cc8b-bd85-8e12-c235\" data-square=\"f8\"></div><div class=\"square-55d63 white-1e1d7 square-g8\" style=\"width:62px;height:62px;\" id=\"g8-09bd-9723-3ae4-5180-6857-19b8-3406-765d\" data-square=\"g8\"></div><div class=\"square-55d63 black-3c85d square-h8\" style=\"width:62px;height:62px;\" id=\"h8-f602-9682-394f-616c-ba83-faf9-8001-6c17\" data-square=\"h8\"></div><div class=\"clearfix-7da63\"></div></div><div class=\"row-5277c\"><div class=\"square-55d63 black-3c85d square-a7\" style=\"width:62px;height:62px;\" id=\"a7-3531-f65b-69d7-bfbf-8c2f-28f8-da8c-01fa\" data-square=\"a7\"><div class=\"notation-322f9 numeric-fc462\">7</div></div><div class=\"square-55d63 white-1e1d7 square-b7\" style=\"width:62px;height:62px;\" id=\"b7-da7d-d955-d472-fb72-e1e0-13d9-877a-3217\" data-square=\"b7\"></div><div class=\"square-55d63 black-3c85d square-c7\" style=\"width:62px;height:62px;\" id=\"c7-ed40-ac1a-f384-b702-6fb8-f492-1c92-ab35\" data-square=\"c7\"></div><div class=\"square-55d63 white-1e1d7 square-d7\" style=\"width:62px;height:62px;\" id=\"d7-72a8-574a-3423-8b6a-e953-6b24-eccc-6ac1\" data-square=\"d7\"></div><div class=\"square-55d63 black-3c85d square-e7\" style=\"width:62px;height:62px;\" id=\"e7-f230-8c8a-e706-fd00-b6f4-f264-44c9-2fb0\" data-square=\"e7\"></div><div class=\"square-55d63 white-1e1d7 square-f7\" style=\"width:62px;height:62px;\" id=\"f7-91c6-f51f-b594-9129-b93c-fb4c-79eb-e36f\" data-square=\"f7\"></div><div class=\"square-55d63 black-3c85d square-g7\" style=\"width:62px;height:62px;\" id=\"g7-7cc2-8915-e94a-9a16-9755-afcb-5924-5d0c\" data-square=\"g7\"></div><div class=\"square-55d63 white-1e1d7 square-h7\" style=\"width:62px;height:62px;\" id=\"h7-2aaf-b530-ccc0-a615-716b-a2b7-095a-a743\" data-square=\"h7\"></div><div class=\"clearfix-7da63\"></div></div><div class=\"row-5277c\"><div class=\"square-55d63 white-1e1d7 square-a6\" style=\"width:62px;height:62px;\" id=\"a6-22d2-7739-14b8-1916-445a-89c9-0aa1-431c\" data-square=\"a6\"><div class=\"notation-322f9 numeric-fc462\">6</div></div><div class=\"square-55d63 black-3c85d square-b6\" style=\"width:62px;height:62px;\" id=\"b6-15db-f9c9-733a-59de-a353-7e40-c30e-f3f2\" data-square=\"b6\"></div><div class=\"square-55d63 white-1e1d7 square-c6\" style=\"width:62px;height:62px;\" id=\"c6-a261-31cf-a61b-fbf4-b4d3-020a-1dc6-da11\" data-square=\"c6\"></div><div class=\"square-55d63 black-3c85d square-d6\" style=\"width:62px;height:62px;\" id=\"d6-5463-3e63-8775-f0fd-e905-9d20-d6de-a0d1\" data-square=\"d6\"></div><div class=\"square-55d63 white-1e1d7 square-e6\" style=\"width:62px;height:62px;\" id=\"e6-4c4a-e581-289a-c8cc-e3dd-7005-9dec-0bc2\" data-square=\"e6\"></div><div class=\"square-55d63 black-3c85d square-f6\" style=\"width:62px;height:62px;\" id=\"f6-d1d1-36b2-8249-8354-3e3d-a93e-283d-0ead\" data-square=\"f6\"></div><div class=\"square-55d63 white-1e1d7 square-g6\" style=\"width:62px;height:62px;\" id=\"g6-1d16-b4c3-e104-ecb3-c063-8704-f35d-e78d\" data-square=\"g6\"></div><div class=\"square-55d63 black-3c85d square-h6\" style=\"width:62px;height:62px;\" id=\"h6-b14f-815b-7931-0b06-f17a-93dc-e137-25d1\" data-square=\"h6\"></div><div class=\"clearfix-7da63\"></div></div><div class=\"row-5277c\"><div class=\"square-55d63 black-3c85d square-a5\" style=\"width:62px;height:62px;\" id=\"a5-de4c-bb88-07a9-420c-ba00-cfda-f69b-29dc\" data-square=\"a5\"><div class=\"notation-322f9 numeric-fc462\">5</div></div><div class=\"square-55d63 white-1e1d7 square-b5\" style=\"width:62px;height:62px;\" id=\"b5-7bf6-a463-83f5-163a-e27f-daec-2c54-c1b2\" data-square=\"b5\"></div><div class=\"square-55d63 black-3c85d square-c5\" style=\"width:62px;height:62px;\" id=\"c5-677c-8286-5bc2-1284-15da-8cd4-b23e-d2b3\" data-square=\"c5\"></div><div class=\"square-55d63 white-1e1d7 square-d5\" style=\"width:62px;height:62px;\" id=\"d5-1ef6-5a16-4111-19dc-3ee7-2630-4993-9d45\" data-square=\"d5\"></div><div class=\"square-55d63 black-3c85d square-e5\" style=\"width:62px;height:62px;\" id=\"e5-9483-5beb-4e25-e420-68a7-a317-3724-5410\" data-square=\"e5\"></div><div class=\"square-55d63 white-1e1d7 square-f5\" style=\"width:62px;height:62px;\" id=\"f5-210b-ca6f-401d-2860-9012-1d22-d33a-3219\" data-square=\"f5\"></div><div class=\"square-55d63 black-3c85d square-g5\" style=\"width:62px;height:62px;\" id=\"g5-aec0-caad-bdf4-9577-cb67-3301-061b-4ac5\" data-square=\"g5\"></div><div class=\"square-55d63 white-1e1d7 square-h5\" style=\"width:62px;height:62px;\" id=\"h5-bb9e-c914-cc7b-2553-47b6-0d34-1c5a-332a\" data-square=\"h5\"></div><div class=\"clearfix-7da63\"></div></div><div class=\"row-5277c\"><div class=\"square-55d63 white-1e1d7 square-a4\" style=\"width:62px;height:62px;\" id=\"a4-cdb4-dfc5-87b6-9e5e-eb15-6c49-6b1e-9424\" data-square=\"a4\"><div class=\"notation-322f9 numeric-fc462\">4</div></div><div class=\"square-55d63 black-3c85d square-b4\" style=\"width:62px;height:62px;\" id=\"b4-25b9-da26-2432-e53b-b087-95a7-172b-1e29\" data-square=\"b4\"></div><div class=\"square-55d63 white-1e1d7 square-c4\" style=\"width:62px;height:62px;\" id=\"c4-0366-941b-413f-45ab-5535-2823-bc3f-cac7\" data-square=\"c4\"></div><div class=\"square-55d63 black-3c85d square-d4\" style=\"width:62px;height:62px;\" id=\"d4-974a-9e3d-42c1-b027-afdd-805b-e734-c31a\" data-square=\"d4\"></div><div class=\"square-55d63 white-1e1d7 square-e4\" style=\"width:62px;height:62px;\" id=\"e4-c14b-c461-a1ec-89ff-7ab1-b273-80e6-3a43\" data-square=\"e4\"></div><div class=\"square-55d63 black-3c85d square-f4\" style=\"width:62px;height:62px;\" id=\"f4-ae0b-2a03-70d7-bf47-2297-71e6-adde-23c9\" data-square=\"f4\"></div><div class=\"square-55d63 white-1e1d7 square-g4\" style=\"width:62px;height:62px;\" id=\"g4-42d0-db62-6e02-713f-6c57-ff2b-4466-61d5\" data-square=\"g4\"></div><div class=\"square-55d63 black-3c85d square-h4\" style=\"width:62px;height:62px;\" id=\"h4-f9e8-1506-db75-76af-9622-9e98-4d74-6a6f\" data-square=\"h4\"></div><div class=\"clearfix-7da63\"></div></div><div class=\"row-5277c\"><div class=\"square-55d63 black-3c85d square-a3\" style=\"width:62px;height:62px;\" id=\"a3-ee71-4217-72dc-de85-e83c-3f1e-df1a-3276\" data-square=\"a3\"><div class=\"notation-322f9 numeric-fc462\">3</div></div><div class=\"square-55d63 white-1e1d7 square-b3\" style=\"width:62px;height:62px;\" id=\"b3-5d40-8230-842a-bc63-2183-bd57-87cc-e0c9\" data-square=\"b3\"></div><div class=\"square-55d63 black-3c85d square-c3\" style=\"width:62px;height:62px;\" id=\"c3-785a-79ec-0843-543d-51c5-d9b3-65ae-0005\" data-square=\"c3\"></div><div class=\"square-55d63 white-1e1d7 square-d3\" style=\"width:62px;height:62px;\" id=\"d3-864c-d4f7-a351-4deb-6333-9639-138d-17d8\" data-square=\"d3\"></div><div class=\"square-55d63 black-3c85d square-e3\" style=\"width:62px;height:62px;\" id=\"e3-d404-4fa9-c3ec-ce37-3e4d-9a6b-5677-3f10\" data-square=\"e3\"></div><div class=\"square-55d63 white-1e1d7 square-f3\" style=\"width:62px;height:62px;\" id=\"f3-63ec-baf6-1169-2f04-35e6-3fd1-97ac-e801\" data-square=\"f3\"></div><div class=\"square-55d63 black-3c85d square-g3\" style=\"width:62px;height:62px;\" id=\"g3-69e7-a7a1-dd8c-8ff4-f15b-cbe4-71e6-6309\" data-square=\"g3\"></div><div class=\"square-55d63 white-1e1d7 square-h3\" style=\"width:62px;height:62px;\" id=\"h3-8f1e-4833-f27f-edbd-62af-d5cf-1984-34e2\" data-square=\"h3\"></div><div class=\"clearfix-7da63\"></div></div><div class=\"row-5277c\"><div class=\"square-55d63 white-1e1d7 square-a2\" style=\"width:62px;height:62px;\" id=\"a2-d9ae-f68e-7de6-7877-74ec-f5d9-2526-a4b5\" data-square=\"a2\"><div class=\"notation-322f9 numeric-fc462\">2</div></div><div class=\"square-55d63 black-3c85d square-b2\" style=\"width:62px;height:62px;\" id=\"b2-16cb-e976-5ab2-9458-d03c-a8d1-98e7-7e76\" data-square=\"b2\"></div><div class=\"square-55d63 white-1e1d7 square-c2\" style=\"width:62px;height:62px;\" id=\"c2-7110-1a44-750b-f19b-bf9e-df21-6619-1ef9\" data-square=\"c2\"></div><div class=\"square-55d63 black-3c85d square-d2\" style=\"width:62px;height:62px;\" id=\"d2-34bc-c182-c21f-58f6-01a1-0cb5-09a2-1775\" data-square=\"d2\"></div><div class=\"square-55d63 white-1e1d7 square-e2\" style=\"width:62px;height:62px;\" id=\"e2-e257-c95e-237c-379c-5390-05eb-9c28-e75c\" data-square=\"e2\"></div><div class=\"square-55d63 black-3c85d square-f2\" style=\"width:62px;height:62px;\" id=\"f2-74df-f8ae-68ce-b85b-cab7-ae7c-c69d-8a74\" data-square=\"f2\"></div><div class=\"square-55d63 white-1e1d7 square-g2\" style=\"width:62px;height:62px;\" id=\"g2-5c1c-901c-f4c6-ce6b-5bc0-a6ac-f1cc-9d49\" data-square=\"g2\"></div><div class=\"square-55d63 black-3c85d square-h2\" style=\"width:62px;height:62px;\" id=\"h2-195b-ff25-bd53-a619-1443-29f0-62f0-4d7c\" data-square=\"h2\"></div><div class=\"clearfix-7da63\"></div></div><div class=\"row-5277c\"><div class=\"square-55d63 black-3c85d square-a1\" style=\"width:62px;height:62px;\" id=\"a1-3dc4-f432-e3ef-fefe-2d4a-127e-2a49-5b9d\" data-square=\"a1\"><div class=\"notation-322f9 alpha-d2270\">a</div><div class=\"notation-322f9 numeric-fc462\">1</div></div><div class=\"square-55d63 white-1e1d7 square-b1\" style=\"width:62px;height:62px;\" id=\"b1-0ccd-4a0f-15e3-1a84-c63f-c375-86f8-eb11\" data-square=\"b1\"><div class=\"notation-322f9 alpha-d2270\">b</div></div><div class=\"square-55d63 black-3c85d square-c1\" style=\"width:62px;height:62px;\" id=\"c1-eccf-35f3-2f5d-dbf0-26d7-57ff-0242-c620\" data-square=\"c1\"><div class=\"notation-322f9 alpha-d2270\">c</div></div><div class=\"square-55d63 white-1e1d7 square-d1\" style=\"width:62px;height:62px;\" id=\"d1-8fc7-563e-7e3b-f99e-abfe-3192-0f13-b8db\" data-square=\"d1\"><div class=\"notation-322f9 alpha-d2270\">d</div></div><div class=\"square-55d63 black-3c85d square-e1\" style=\"width:62px;height:62px;\" id=\"e1-4eee-1c63-135b-912e-6024-9b89-4172-69b2\" data-square=\"e1\"><div class=\"notation-322f9 alpha-d2270\">e</div></div><div class=\"square-55d63 white-1e1d7 square-f1\" style=\"width:62px;height:62px;\" id=\"f1-28e9-bbda-0b05-8f90-dd9a-b13b-ead0-9518\" data-square=\"f1\"><div class=\"notation-322f9 alpha-d2270\">f</div></div><div class=\"square-55d63 black-3c85d square-g1\" style=\"width:62px;height:62px;\" id=\"g1-71eb-ddf5-629a-a0be-377a-4640-4d79-6087\" data-square=\"g1\"><div class=\"notation-322f9 alpha-d2270\">g</div></div><div class=\"square-55d63 white-1e1d7 square-h1\" style=\"width:62px;height:62px;\" id=\"h1-4b5a-51cf-fdcc-b9e0-8721-d889-89ce-1bed\" data-square=\"h1\"><div class=\"notation-322f9 alpha-d2270\">h</div></div><div class=\"clearfix-7da63\"></div></div></div></div></div>\n    </div>\n\n\n\n",
      "type": "html"
    },
    {
      "code": "<style>\n  #status {\n            font-size: 24px;\n            font-weight: bold;\n            margin-top: 20px;\n            text-align: center;\n        }\n\n        /* Default color for the status message */\n        #status.default {\n            color: #333;\n        }\n\n        /* White's turn */\n        #status.white-turn {\n            color: white;\n            background-color: #333;\n            padding: 10px;\n        }\n\n        /* Black's turn */\n        #status.black-turn {\n            color: black;\n            background-color: #ddd;\n            padding: 10px;\n        }\n\n        /* Game over with checkmate */\n        #status.checkmate {\n            color: white;\n            background-color: red;\n            padding: 15px;\n            font-size: 28px;\n        }\n\n        /* Game over with draw/stalemate */\n        #status.draw {\n            color: black;\n            background-color: yellow;\n            padding: 15px;\n            font-size: 28px;\n        }\n</style>",
      "status": "",
      "output": "<style>\n  #status {\n            font-size: 24px;\n            font-weight: bold;\n            margin-top: 20px;\n            text-align: center;\n        }\n\n        /* Default color for the status message */\n        #status.default {\n            color: #333;\n        }\n\n        /* White's turn */\n        #status.white-turn {\n            color: white;\n            background-color: #333;\n            padding: 10px;\n        }\n\n        /* Black's turn */\n        #status.black-turn {\n            color: black;\n            background-color: #ddd;\n            padding: 10px;\n        }\n\n        /* Game over with checkmate */\n        #status.checkmate {\n            color: white;\n            background-color: red;\n            padding: 15px;\n            font-size: 28px;\n        }\n\n        /* Game over with draw/stalemate */\n        #status.draw {\n            color: black;\n            background-color: yellow;\n            padding: 15px;\n            font-size: 28px;\n        }\n</style>",
      "type": "html"
    },
    {
      "code": "await scrib.loadScript(\"https://code.jquery.com/jquery-3.5.1.min.js\");\nawait scrib.loadScript(\"https://unpkg.com/@chrisoakman/chessboardjs@1.0.0/dist/chessboard-1.0.0.min.js\");\nawait scrib.loadScript(\"https://cdnjs.cloudflare.com/ajax/libs/chess.js/0.10.3/chess.min.js\")\nawait scrib.loadCSS(\"https://unpkg.com/@chrisoakman/chessboardjs@1.0.0/dist/chessboard-1.0.0.min.css\");\n<!-- Add Firebase SDK (for Realtime Database) -->",
      "status": "[38]<br><span style=\"font-size:8px\">53ms<span></span></span>",
      "output": "",
      "type": "code"
    },
    {
      "code": "const firebaseAppModule = await import(\"https://www.gstatic.com/firebasejs/10.12.2/firebase-app.js\"); \nconst firebaseAuthModule = await import(\"https://www.gstatic.com/firebasejs/10.12.2/firebase-auth.js\"); \nconst firebaseFirestoreModule = await import(\"https://www.gstatic.com/firebasejs/10.12.2/firebase-firestore.js\"); \nconst { initializeApp } = firebaseAppModule;\nconst { getAuth } = firebaseAuthModule;\nconst { getFirestore } = firebaseFirestoreModule; // Initialize Firebase Configuration\nconst firebaseConfig = { apiKey: \"AIzaSyAJrRZ6xehvVQk0PuCMhsVNfeNsJzXVmCY\", authDomain: \"vchess-82304.firebaseapp.com\", databaseURL: \"https://vchess-82304-default-rtdb.asia-southeast1.firebasedatabase.app\", projectId: \"vchess-82304\", storageBucket: \"vchess-82304.firebasestorage.app\", messagingSenderId: \"630416421002\", appId: \"1:630416421002:web:604dabeccb74ac778f7d73\", measurementId: \"G-YF3S8Y3FPK\" }; // Initialize Firebase App and services \nconst app = initializeApp(firebaseConfig); \nconst auth = getAuth(app);\nconst db = getFirestore(app); console.log(\"Firebase initialized:\", app);",
      "status": "[39]<br><span style=\"font-size:8px\">4ms<span></span></span>",
      "output": "",
      "type": "code"
    },
    {
      "code": "<style>\n        /* Status message styles */\n        #status {\n            font-size: 24px;\n            font-weight: bold;\n            margin-top: 20px;\n            text-align: center;\n        }\n\n        /* Default color for the status message */\n        #status.default {\n            color: #333;\n        }\n\n        /* White's turn */\n        #status.white-turn {\n            color: white;\n            background-color: #333;\n            padding: 10px;\n        }\n\n        /* Black's turn */\n        #status.black-turn {\n            color: black;\n            background-color: #ddd;\n            padding: 10px;\n        }\n\n        /* Game over with checkmate */\n        #status.checkmate {\n            color: white;\n            background-color: red;\n            padding: 15px;\n            font-size: 28px;\n        }\n\n        /* Game over with draw/stalemate */\n        #status.draw {\n            color: black;\n            background-color: yellow;\n            padding: 15px;\n            font-size: 28px;\n        }\n    </style>",
      "status": "",
      "output": "<style>\n        /* Status message styles */\n        #status {\n            font-size: 24px;\n            font-weight: bold;\n            margin-top: 20px;\n            text-align: center;\n        }\n\n        /* Default color for the status message */\n        #status.default {\n            color: #333;\n        }\n\n        /* White's turn */\n        #status.white-turn {\n            color: white;\n            background-color: #333;\n            padding: 10px;\n        }\n\n        /* Black's turn */\n        #status.black-turn {\n            color: black;\n            background-color: #ddd;\n            padding: 10px;\n        }\n\n        /* Game over with checkmate */\n        #status.checkmate {\n            color: white;\n            background-color: red;\n            padding: 15px;\n            font-size: 28px;\n        }\n\n        /* Game over with draw/stalemate */\n        #status.draw {\n            color: black;\n            background-color: yellow;\n            padding: 15px;\n            font-size: 28px;\n        }\n    </style>",
      "type": "html"
    },
    {
      "code": "\n    var board2 = ChessBoard('board2', {\n      draggable: true,\n      pieceTheme: 'https://chessboardjs.com/img/chesspieces/alpha/{piece}.png',\n      dropOffBoard: 'trash',\n      onDragStart: onDragStart,\n      onDrop: onDrop,\n      onSnapEnd: onSnapEnd\n    });\n\n    var game = new Chess();\n    var gameOver = false; // Flag to track if the game is over\n\n    // Function to prevent illegal moves or moves by the wrong player\n    function onDragStart(source, piece, position, orientation) {\n      if (gameOver) return false; // Disable dragging if the game is over\n      if ((game.turn() === 'w' && piece.startsWith('b')) || \n          (game.turn() === 'b' && piece.startsWith('w'))) {\n        return false;\n      }\n    }\n\n    // Function to handle piece drop and validate move\n    function onDrop(source, target) {\n      if (gameOver) return 'snapback'; // Disable dropping if the game is over\n\n      var move = game.move({\n        from: source,\n        to: target,\n        promotion: 'q'  // Auto-promote to queen for simplicity\n      });\n\n      if (move === null) return 'snapback';  // Illegal move\n      updateStatus();  // Update game status after each valid move\n      updateMoveHistory(move.san);  // Add the move to the move history\n    }\n\n    // Sync board position with game state after each move\n    function onSnapEnd() {\n      board2.position(game.fen());\n    }\n\n    // Function to update board and game status\n    function updateStatus() {\n      var status = '';\n\n      if (game.in_checkmate()) {\n        status = 'Game over, ' + (game.turn() === 'w' ? 'White' : 'Black') + ' is in checkmate.';\n        gameOver = true; // Set game over flag\n      } else if (game.in_draw() || game.in_stalemate() || game.in_threefold_repetition() || game.insufficient_material()) {\n        status = 'Game over, it\\'s a draw!';\n        gameOver = true; // Set game over flag\n      } else {\n        status = (game.turn() === 'w' ? 'White' : 'Black') + ' to move';\n        if (game.in_check()) {\n          status += ', in check!';\n        }\n      }\n\n      document.getElementById('status').innerText = status; // Display status message\n    }\n\n    // Function to update move history display\n    var moveHistory = []; // To store the move history\n\n    function updateMoveHistory(move) {\n  // Add the move to the history\n  moveHistory.push(move);\n\n  // Keep only the most recent 8 moves\n  if (moveHistory.length > 8) {\n    moveHistory.shift(); // Remove the oldest move\n  }\n\n  // Update the move list display\n  var movesList = document.getElementById('movesList');\n  movesList.innerHTML = ''; // Clear the current move list\n\n  // Iterate over the history and display moves in the required format\n  moveHistory.forEach(function (move, index) {\n    // If it's the first move (index 0), calculate the turn explicitly\n    var currentTurn = (index % 2 === 0) ? 'w' : 'b'; // White moves first (even index is white)\n\n    // Get the color and piece from the move and format it\n    var moveText = formatMove(move, currentTurn); // Use calculated turn for formatting\n    var moveItem = document.createElement('div');\n    moveItem.textContent = moveText;\n    movesList.appendChild(moveItem);\n  });\n}\n\n\n    // Format the move as \"white-pawn-d6\" or \"black-pawn-d5\"\nfunction formatMove(move, turn) {\n  // Determine the color of the player making the move\n  var color = (turn === 'w') ? 'white' : 'black'; // 'w' for white and 'b' for black\n  \n  // Map the first character to the piece type\n  var piece;\n  var moveIndex = 0;  // To track if the move starts with a piece character\n  \n  // Check if the first character is a valid piece (Knight, Rook, King, Queen)\n  if (move.charAt(0) === 'N') {\n    piece = 'knight';\n    moveIndex = 1;  // Skip the first character (since it's part of the piece)\n  } else if (move.charAt(0) === 'R') {\n    piece = 'rook';\n    moveIndex = 1;\n  } else if (move.charAt(0) === 'K') {\n    piece = 'king';\n    moveIndex = 1;\n  } else if (move.charAt(0) === 'Q') {\n    piece = 'queen';\n    moveIndex = 1;\n  } else if (move.charAt(0) === 'B') {\n    piece = 'bishop';\n    moveIndex = 1;\n  } else {\n    piece = 'pawn';  // If no piece character, it's a pawn\n    moveIndex = 0;  // No need to skip any character\n  }\n\n  // Remove any capture or check symbols for easier parsing\n  var cleanedMove = move.replace(/[x+]/g, ''); // Remove 'x' (captures) and '+' (checks)\n\n  // Determine the target square (last two characters of the move)\n  var targetSquare = cleanedMove.slice(-2);\n\n  // Handle pawn captures and simple moves\n  if (piece === 'pawn') {\n    if (move.length > 3) {\n      // Pawn capture move (e.g., e5xd6 -> white-pawn-e5-x-d6)\n      var captureSquare = move.slice(2, 4);  // Capture destination (e.g., \"d6\" in e5xd6)\n      return color + '-pawn-' + '-x-' + captureSquare;\n    } else {\n      // Simple pawn move (e.g., e2-e4 -> white-pawn-e4)\n      return color + '-pawn-' + targetSquare;\n    }\n  } else {\n    // Handle non-pawn pieces (e.g., Knight, Rook, etc.)\n    var capture = move.includes('x'); // Check if it's a capture (e.g., Rxd4)\n\n    if (capture) {\n      // Format capture moves (e.g., Rook capture: Rxd5 -> white-rook-d4-x-d5)\n      return color + '-' + piece + '-' + '-x-' + targetSquare;\n    } else {\n      // Non-capture piece move (e.g., Knight move: Nf3 -> white-knight-f3)\n      return color + '-' + piece + '-' + targetSquare;\n    }\n  }\n}\n\n\n\n\n    // Button controls to reset and clear the board\n    document.getElementById('startBtn').addEventListener('click', function() {\n      game.reset();  // Reset chess game\n      board2.start(); // Reset chessboard visualization\n      gameOver = false; // Reset game over flag\n      updateStatus(); // Update the status\n      document.getElementById('movesList').innerHTML = '';  // Clear the move history\n\t  moveHistory = [];\n    });\n\n    document.getElementById('clearBtn').addEventListener('click', function() {\n      game.clear();   // Clear chess game\n      board2.clear(); // Clear chessboard visualization\n      gameOver = false; // Reset game over flag\n      document.getElementById('status').innerText = 'Board cleared.'; // Clear status\n      document.getElementById('movesList').innerHTML = '';  // Clear the move history\n    });\n\n    updateStatus();",
      "status": "[40]<br><span style=\"font-size:8px\">15ms<span></span></span>",
      "output": "",
      "type": "code"
    },
    {
      "code": "// Initialize SpeechRecognition and set properties\nvar SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\nvar recognition = new SpeechRecognition();\nrecognition.lang = 'en-US';\nrecognition.interimResults = false;\nrecognition.maxAlternatives = 1;\n\n// Set flags to manage the state\nlet isRecognitionActive = false;\n\n// Handle recognition errors\nrecognition.onerror = function(event) {\n  console.error(\"Speech recognition error:\", event.error);\n  scrib.show(\"Speech recognition error:\", event.error);\n};\n\n// Handle start and end events\nrecognition.onstart = function() {\n  isRecognitionActive = true;\n  console.log(\"Speech recognition started.\");\n  scrib.show(\"Speech recognition started. Please speak your move.\");\n};\n\nrecognition.onend = function() {\n  isRecognitionActive = false;\n  console.log(\"Speech recognition stopped.\");\n  scrib.show(\"Speech recognition stopped.\");\n};\n\n// Handle speech results\nrecognition.onresult = function(event) {\n  var transcript = event.results[0][0].transcript.toLowerCase();\n  console.log(\"Voice command received:\", transcript);\n  scrib.show(\"Voice command received:\", transcript);\n  processVoiceCommand(transcript);\n};\n\n// Function to start recognition safely\nfunction startRecognition() {\n  if (isRecognitionActive) {\n    recognition.stop(); // Stop recognition if already active\n  }\n  recognition.start(); // Start recognition\n}\n\n// Start listening on a button click\ndocument.getElementById('startVoiceControl').addEventListener('click', function() {\n  startRecognition();\n  console.log(\"Voice control started. Please speak your move.\");\n  scrib.show(\"Voice control started. Please speak your move.\");\n});\n\n// Process voice command and handle moves\nfunction processVoiceCommand(command) {\n  // Regular expression to capture the \"source to target\" pattern (e.g., 'e2 to e3' for pawn moves)\n  var movePattern = /([a-h][1-8])\\s+to\\s+([a-h][1-8])/;\n\n  // Check if the voice command includes a move pattern like 'e2 to e3'\n  var moveMatch = command.match(movePattern);\n\n  if (moveMatch) {\n    var sourceSquare = moveMatch[1];\n    var targetSquare = moveMatch[2];\n\n    // Assume pawn as the default piece if no specific piece is mentioned\n    var piece = 'pawn'; // Default to pawn if no piece is mentioned\n\n    // Map the pieces to their chess notation (e.g., pawn = '')\n    var pieceNotation = {\n      pawn: '', // Pawn doesn't need a letter in chess notation\n      knight: 'N',\n      bishop: 'B',\n      rook: 'R',\n      queen: 'Q',\n      king: 'K'\n    };\n\n    var pieceSymbol = pieceNotation[piece.toLowerCase()];\n\n    // Now find the source square for the piece\n    var sourceSquareFound = findSourceSquare(pieceSymbol, targetSquare);\n\n    if (sourceSquareFound) {\n      var move = game.move({\n        from: sourceSquareFound,\n        to: targetSquare,\n        promotion: 'q' // Automatically promote pawn to queen\n      });\n\n      if (move) {\n        // Successfully made a move: update the board and status\n        board2.position(game.fen());\n        updateStatus();\n        updateMoveHistory(move.san);\n        scrib.show(`Move executed: ${piece} from ${sourceSquare} to ${targetSquare}`);\n      } else {\n        // If move is not valid, show an error\n        scrib.show(\"Illegal move. Try again.\");\n        console.error(\"Illegal move attempted:\", sourceSquare, \"to\", targetSquare);\n      }\n    } else {\n      scrib.show(\"Couldn't determine source square. Try again.\");\n    }\n  } else {\n    scrib.show(\"Invalid command format. Please say moves like 'e2 to e3'.\");\n  }\n}\n\n// Find source square for specified piece and target\nfunction findSourceSquare(piece, targetSquare) {\n  var moves = game.moves({ verbose: true });\n  var matchingMoves = moves.filter(function(m) {\n    return m.piece === piece.toLowerCase() && m.to === targetSquare;\n  });\n  return matchingMoves.length > 0 ? matchingMoves[0].from : null;\n}\n\n// Chessboard and game event functions\nfunction onDragStart(source, piece) {\n  if (gameOver) return false;\n  if ((game.turn() === 'w' && piece.startsWith('b')) ||\n    (game.turn() === 'b' && piece.startsWith('w'))) {\n    return false;\n  }\n}\n\nfunction onDrop(source, target) {\n  if (gameOver) return 'snapback';\n\n  var move = game.move({\n    from: source,\n    to: target,\n    promotion: 'q'\n  });\n\n  if (move === null) return 'snapback';\n  updateStatus();\n  updateMoveHistory(move.san);\n}\n\nfunction onSnapEnd() {\n  board2.position(game.fen());\n}\n\nfunction updateStatus() {\n  var status = '';\n  if (game.in_checkmate()) {\n    status = 'Game over, ' + (game.turn() === 'w' ? 'White' : 'Black') + ' is in checkmate.';\n    gameOver = true;\n  } else if (game.in_draw() || game.in_stalemate() || game.in_threefold_repetition() || game.insufficient_material()) {\n    status = 'Game over, it\\'s a draw!';\n    gameOver = true;\n  } else {\n    status = (game.turn() === 'w' ? 'White' : 'Black') + ' to move';\n    if (game.in_check()) status += ', in check!';\n  }\n  document.getElementById('status').innerText = status;\n}\n\n// Update move history\nvar moveHistory = []; // To store the move history\n\nfunction updateMoveHistory(move) {\n  // Add the move to the history\n  moveHistory.push(move);\n\n  // Keep only the most recent 8 moves\n  if (moveHistory.length > 8) {\n    moveHistory.shift(); // Remove the oldest move\n  }\n\n  // Update the move list display\n  var movesList = document.getElementById('movesList');\n  movesList.innerHTML = ''; // Clear the current move list\n\n  // Iterate over the history and display moves in the required format\n  moveHistory.forEach(function (move, index) {\n    var currentTurn = (index % 2 === 0) ? 'w' : 'b'; // White moves first (even index is white)\n    var moveText = formatMove(move, currentTurn); // Use calculated turn for formatting\n    var moveItem = document.createElement('div');\n    moveItem.textContent = moveText;\n    movesList.appendChild(moveItem);\n  });\n}\n\n// Format the move as \"white-pawn-e4\" for pawn moves\nfunction formatMove(move, turn) {\n  var color = (turn === 'w') ? 'white' : 'black'; // 'w' for white and 'b' for black\n  var piece = 'pawn';  // For simplicity, we're treating all moves as pawns in this example\n  var targetSquare = move.slice(-2);\n\n  return color + '-pawn-' + targetSquare;\n}\n",
      "status": "[41]<br><span style=\"font-size:8px\">0ms<span></span></span>",
      "output": "",
      "type": "code"
    }
  ],
  "source": "https://github.com/gopi-suvanam/jsnb",
  "run_on_load": false
}