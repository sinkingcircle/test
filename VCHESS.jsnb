{
  "metadata": {
    "name": "VCHESS devs only",
    "language_info": {
      "name": "JavaScipt",
      "version": "8.0"
    }
  },
  "jsnbversion": "v0.1",
  "cells": [
    {
      "code": "<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Chessboard with Rules</title>\n    <link rel=\"stylesheet\" href=\"https://unpkg.com/@chrisoakman/chessboardjs@1.0.0/dist/chessboard-1.0.0.min.css\" />\n    <script src=\"https://unpkg.com/@chrisoakman/chessboardjs@1.0.0/dist/chessboard-1.0.0.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/chess.js/0.12.0/chess.min.js\"></script>\n  </head>\n    \n  <body>\n\t<center><p id=\"status\"></p></center> <!-- Display the game status here -->\n    <div style=\"display: flex; align-items: center; justify-content: center; margin-top: 10px;\">\n        <!-- Buttons container aligned side by side -->\n        <div style=\"margin-right: 20px;\">\n            <button id=\"startBtn\" style=\"margin-right: 10px;\">Start Position</button>\n            <button id=\"clearBtn\">Clear Board</button>\n\t\t\t<button id=\"startVoiceControl\">Start Voice Control</button>\n\t\t\t<p>Say commands like \"move knight to f3\"</p>\n\t\t\t<div id=\"moveHistory\" style=\"margin-top: 20px; font-size: 18px;\">\n  <strong> Recent Moves:</strong>\n  <div id=\"movesList\"></div> <!-- Moves will be displayed here -->\n</div>\n        </div>\n        \n        <!-- Chessboard -->\n        <div id=\"board2\" style=\"width: 500px\"></div>\n    </div>\n\n</body>\n\n</html>",
      "status": "",
      "output": "\n  \n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Chessboard with Rules</title>\n    <link rel=\"stylesheet\" href=\"https://unpkg.com/@chrisoakman/chessboardjs@1.0.0/dist/chessboard-1.0.0.min.css\">\n    <script src=\"https://unpkg.com/@chrisoakman/chessboardjs@1.0.0/dist/chessboard-1.0.0.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/chess.js/0.12.0/chess.min.js\"></script>\n  \n    \n  \n\t<center><p id=\"status\">Black to move</p></center> <!-- Display the game status here -->\n    <div style=\"display: flex; align-items: center; justify-content: center; margin-top: 10px;\">\n        <!-- Buttons container aligned side by side -->\n        <div style=\"margin-right: 20px;\">\n            <button id=\"startBtn\" style=\"margin-right: 10px;\">Start Position</button>\n            <button id=\"clearBtn\">Clear Board</button>\n\t\t\t<button id=\"startVoiceControl\">Start Voice Control</button>\n\t\t\t<p>Say commands like \"move knight to f3\"</p>\n\t\t\t<div id=\"moveHistory\" style=\"margin-top: 20px; font-size: 18px;\">\n  <strong> Recent Moves:</strong>\n  <div id=\"movesList\"><div>white-pawn-e4</div><div>black-pawn-d5</div><div>white-pawn--x-d5</div></div> <!-- Moves will be displayed here -->\n</div>\n        </div>\n        \n        <!-- Chessboard -->\n        <div id=\"board2\" style=\"width: 500px\"><div class=\"chessboard-63f37\"><div class=\"board-b72b1\" style=\"width: 496px;\"><div class=\"row-5277c\"><div class=\"square-55d63 white-1e1d7 square-a8\" style=\"width:62px;height:62px;\" id=\"a8-ef7f-23a4-90f6-17c8-7724-03c8-63e2-ed76\" data-square=\"a8\"><div class=\"notation-322f9 numeric-fc462\">8</div><img src=\"https://chessboardjs.com/img/chesspieces/alpha/bR.png\" alt=\"\" class=\"piece-417db\" data-piece=\"bR\" style=\"width:62px;height:62px;\"></div><div class=\"square-55d63 black-3c85d square-b8\" style=\"width:62px;height:62px;\" id=\"b8-bc5f-48b6-45cf-8285-e422-565e-67cd-e3c9\" data-square=\"b8\"><img src=\"https://chessboardjs.com/img/chesspieces/alpha/bN.png\" alt=\"\" class=\"piece-417db\" data-piece=\"bN\" style=\"width:62px;height:62px;\"></div><div class=\"square-55d63 white-1e1d7 square-c8\" style=\"width:62px;height:62px;\" id=\"c8-e233-fb22-4fd7-ca9d-ef3f-49f8-25cb-d551\" data-square=\"c8\"><img src=\"https://chessboardjs.com/img/chesspieces/alpha/bB.png\" alt=\"\" class=\"piece-417db\" data-piece=\"bB\" style=\"width:62px;height:62px;\"></div><div class=\"square-55d63 black-3c85d square-d8\" style=\"width:62px;height:62px;\" id=\"d8-399a-d257-cd8e-bf30-31c6-eaf0-35ba-97b7\" data-square=\"d8\"><img src=\"https://chessboardjs.com/img/chesspieces/alpha/bQ.png\" alt=\"\" class=\"piece-417db\" data-piece=\"bQ\" style=\"width:62px;height:62px;\"></div><div class=\"square-55d63 white-1e1d7 square-e8\" style=\"width:62px;height:62px;\" id=\"e8-b10f-f64d-b486-7af7-2df3-bb87-5852-e53d\" data-square=\"e8\"><img src=\"https://chessboardjs.com/img/chesspieces/alpha/bK.png\" alt=\"\" class=\"piece-417db\" data-piece=\"bK\" style=\"width:62px;height:62px;\"></div><div class=\"square-55d63 black-3c85d square-f8\" style=\"width:62px;height:62px;\" id=\"f8-33b2-2804-2c44-a29b-f58f-57f8-ebbf-ed01\" data-square=\"f8\"><img src=\"https://chessboardjs.com/img/chesspieces/alpha/bB.png\" alt=\"\" class=\"piece-417db\" data-piece=\"bB\" style=\"width:62px;height:62px;\"></div><div class=\"square-55d63 white-1e1d7 square-g8\" style=\"width:62px;height:62px;\" id=\"g8-4f7e-8fd4-28f6-adf2-121d-8954-78c2-8b16\" data-square=\"g8\"><img src=\"https://chessboardjs.com/img/chesspieces/alpha/bN.png\" alt=\"\" class=\"piece-417db\" data-piece=\"bN\" style=\"width:62px;height:62px;\"></div><div class=\"square-55d63 black-3c85d square-h8\" style=\"width:62px;height:62px;\" id=\"h8-578f-0239-0003-5c19-f727-163c-5852-32b2\" data-square=\"h8\"><img src=\"https://chessboardjs.com/img/chesspieces/alpha/bR.png\" alt=\"\" class=\"piece-417db\" data-piece=\"bR\" style=\"width:62px;height:62px;\"></div><div class=\"clearfix-7da63\"></div></div><div class=\"row-5277c\"><div class=\"square-55d63 black-3c85d square-a7\" style=\"width:62px;height:62px;\" id=\"a7-00d1-c7d2-4904-23b9-11f4-7a2f-9777-ece5\" data-square=\"a7\"><div class=\"notation-322f9 numeric-fc462\">7</div><img src=\"https://chessboardjs.com/img/chesspieces/alpha/bP.png\" alt=\"\" class=\"piece-417db\" data-piece=\"bP\" style=\"width:62px;height:62px;\"></div><div class=\"square-55d63 white-1e1d7 square-b7\" style=\"width:62px;height:62px;\" id=\"b7-c8b6-4007-a8fd-03b9-af68-3bb6-7ea4-9d79\" data-square=\"b7\"><img src=\"https://chessboardjs.com/img/chesspieces/alpha/bP.png\" alt=\"\" class=\"piece-417db\" data-piece=\"bP\" style=\"width:62px;height:62px;\"></div><div class=\"square-55d63 black-3c85d square-c7\" style=\"width:62px;height:62px;\" id=\"c7-a3d5-d0ca-1989-123a-0456-85bb-ab18-5e97\" data-square=\"c7\"><img src=\"https://chessboardjs.com/img/chesspieces/alpha/bP.png\" alt=\"\" class=\"piece-417db\" data-piece=\"bP\" style=\"width:62px;height:62px;\"></div><div class=\"square-55d63 white-1e1d7 square-d7\" style=\"width:62px;height:62px;\" id=\"d7-a0eb-e011-bc68-0ec6-1b60-9cec-06b5-774c\" data-square=\"d7\"></div><div class=\"square-55d63 black-3c85d square-e7\" style=\"width:62px;height:62px;\" id=\"e7-8187-efc5-dc29-2d63-223f-4a2b-ea29-7424\" data-square=\"e7\"><img src=\"https://chessboardjs.com/img/chesspieces/alpha/bP.png\" alt=\"\" class=\"piece-417db\" data-piece=\"bP\" style=\"width:62px;height:62px;\"></div><div class=\"square-55d63 white-1e1d7 square-f7\" style=\"width:62px;height:62px;\" id=\"f7-f333-e37b-a273-5d9f-2444-be15-2185-0c69\" data-square=\"f7\"><img src=\"https://chessboardjs.com/img/chesspieces/alpha/bP.png\" alt=\"\" class=\"piece-417db\" data-piece=\"bP\" style=\"width:62px;height:62px;\"></div><div class=\"square-55d63 black-3c85d square-g7\" style=\"width:62px;height:62px;\" id=\"g7-7b13-e9c3-800c-0ed9-48e1-0bfd-2236-334f\" data-square=\"g7\"><img src=\"https://chessboardjs.com/img/chesspieces/alpha/bP.png\" alt=\"\" class=\"piece-417db\" data-piece=\"bP\" style=\"width:62px;height:62px;\"></div><div class=\"square-55d63 white-1e1d7 square-h7\" style=\"width:62px;height:62px;\" id=\"h7-8783-c4ea-bc13-e542-0ee4-d317-36cb-d1cc\" data-square=\"h7\"><img src=\"https://chessboardjs.com/img/chesspieces/alpha/bP.png\" alt=\"\" class=\"piece-417db\" data-piece=\"bP\" style=\"width:62px;height:62px;\"></div><div class=\"clearfix-7da63\"></div></div><div class=\"row-5277c\"><div class=\"square-55d63 white-1e1d7 square-a6\" style=\"width:62px;height:62px;\" id=\"a6-1a73-706b-537e-523c-ca2f-f889-23b2-38d7\" data-square=\"a6\"><div class=\"notation-322f9 numeric-fc462\">6</div></div><div class=\"square-55d63 black-3c85d square-b6\" style=\"width:62px;height:62px;\" id=\"b6-50b1-ba2b-483e-7a21-e94b-b2a0-65c7-21d2\" data-square=\"b6\"></div><div class=\"square-55d63 white-1e1d7 square-c6\" style=\"width:62px;height:62px;\" id=\"c6-2794-cb61-cb15-8a89-d3a8-a46d-32b9-d27f\" data-square=\"c6\"></div><div class=\"square-55d63 black-3c85d square-d6\" style=\"width:62px;height:62px;\" id=\"d6-ece5-c680-10b4-011d-3e6d-8a04-a7f8-ab87\" data-square=\"d6\"></div><div class=\"square-55d63 white-1e1d7 square-e6\" style=\"width:62px;height:62px;\" id=\"e6-93b6-95a2-b6a8-640f-169c-0222-63a9-817c\" data-square=\"e6\"></div><div class=\"square-55d63 black-3c85d square-f6\" style=\"width:62px;height:62px;\" id=\"f6-22d7-5a80-d277-b20e-4425-81f0-3c5c-4eab\" data-square=\"f6\"></div><div class=\"square-55d63 white-1e1d7 square-g6\" style=\"width:62px;height:62px;\" id=\"g6-2214-5e7e-30c1-d1cc-6a9d-75d9-bec1-6504\" data-square=\"g6\"></div><div class=\"square-55d63 black-3c85d square-h6\" style=\"width:62px;height:62px;\" id=\"h6-76e6-03ce-cd0c-5dde-88a4-884f-7ee1-7072\" data-square=\"h6\"></div><div class=\"clearfix-7da63\"></div></div><div class=\"row-5277c\"><div class=\"square-55d63 black-3c85d square-a5\" style=\"width:62px;height:62px;\" id=\"a5-69c1-897e-0c5e-ea3f-4ad6-6d21-9e60-a2b8\" data-square=\"a5\"><div class=\"notation-322f9 numeric-fc462\">5</div></div><div class=\"square-55d63 white-1e1d7 square-b5\" style=\"width:62px;height:62px;\" id=\"b5-89d6-583b-0909-b357-9f9b-b34e-817e-05d9\" data-square=\"b5\"></div><div class=\"square-55d63 black-3c85d square-c5\" style=\"width:62px;height:62px;\" id=\"c5-1e16-85ea-5a9b-09c2-29c0-16f4-dd95-b051\" data-square=\"c5\"></div><div class=\"square-55d63 white-1e1d7 square-d5\" style=\"width:62px;height:62px;\" id=\"d5-fa7d-b1f7-3d4a-184e-2e2c-bcac-9dfd-bb6d\" data-square=\"d5\"><img src=\"https://chessboardjs.com/img/chesspieces/alpha/wP.png\" alt=\"\" class=\"piece-417db\" data-piece=\"wP\" style=\"width:62px;height:62px;\"></div><div class=\"square-55d63 black-3c85d square-e5\" style=\"width:62px;height:62px;\" id=\"e5-39c8-8aa7-f1dc-24d5-f0e6-0fff-0105-3301\" data-square=\"e5\"></div><div class=\"square-55d63 white-1e1d7 square-f5\" style=\"width:62px;height:62px;\" id=\"f5-ffc6-32d4-96c6-0740-a4ae-cc47-5d7d-81b3\" data-square=\"f5\"></div><div class=\"square-55d63 black-3c85d square-g5\" style=\"width:62px;height:62px;\" id=\"g5-b8f5-d4ae-61d0-cc8e-d29c-faa4-36c8-8a0e\" data-square=\"g5\"></div><div class=\"square-55d63 white-1e1d7 square-h5\" style=\"width:62px;height:62px;\" id=\"h5-7014-ffd0-2e46-8885-96e2-9c68-3ef6-f035\" data-square=\"h5\"></div><div class=\"clearfix-7da63\"></div></div><div class=\"row-5277c\"><div class=\"square-55d63 white-1e1d7 square-a4\" style=\"width:62px;height:62px;\" id=\"a4-4347-2a31-42f7-6115-5575-2fda-d018-1e56\" data-square=\"a4\"><div class=\"notation-322f9 numeric-fc462\">4</div></div><div class=\"square-55d63 black-3c85d square-b4\" style=\"width:62px;height:62px;\" id=\"b4-661a-9cb7-ab2f-d101-b5f0-65d2-8054-101f\" data-square=\"b4\"></div><div class=\"square-55d63 white-1e1d7 square-c4\" style=\"width:62px;height:62px;\" id=\"c4-2b3e-d8e3-9f19-bc70-00ae-e17c-5e72-0658\" data-square=\"c4\"></div><div class=\"square-55d63 black-3c85d square-d4\" style=\"width:62px;height:62px;\" id=\"d4-b17a-b875-c3c5-61cc-1193-8abd-2808-2256\" data-square=\"d4\"></div><div class=\"square-55d63 white-1e1d7 square-e4\" style=\"width:62px;height:62px;\" id=\"e4-8cd8-6c56-99d0-873a-d29a-7280-2833-e775\" data-square=\"e4\"></div><div class=\"square-55d63 black-3c85d square-f4\" style=\"width:62px;height:62px;\" id=\"f4-7125-47ba-1221-291d-1256-f9ea-c716-707b\" data-square=\"f4\"></div><div class=\"square-55d63 white-1e1d7 square-g4\" style=\"width:62px;height:62px;\" id=\"g4-a029-0839-6c73-b74a-1211-72ea-7a77-fc33\" data-square=\"g4\"></div><div class=\"square-55d63 black-3c85d square-h4\" style=\"width:62px;height:62px;\" id=\"h4-532e-cf38-e763-06f3-30d7-0b4b-4d1b-6dd8\" data-square=\"h4\"></div><div class=\"clearfix-7da63\"></div></div><div class=\"row-5277c\"><div class=\"square-55d63 black-3c85d square-a3\" style=\"width:62px;height:62px;\" id=\"a3-c2ab-4367-82ab-9e39-4f76-4c91-c074-9cc4\" data-square=\"a3\"><div class=\"notation-322f9 numeric-fc462\">3</div></div><div class=\"square-55d63 white-1e1d7 square-b3\" style=\"width:62px;height:62px;\" id=\"b3-ad5f-b4a0-0243-95ed-77b5-6581-9d79-44de\" data-square=\"b3\"></div><div class=\"square-55d63 black-3c85d square-c3\" style=\"width:62px;height:62px;\" id=\"c3-4f30-419c-d28a-43e8-8a23-f5fd-d6b4-2eb6\" data-square=\"c3\"></div><div class=\"square-55d63 white-1e1d7 square-d3\" style=\"width:62px;height:62px;\" id=\"d3-e662-2e29-fd5b-562b-8419-266b-0fb8-1bca\" data-square=\"d3\"></div><div class=\"square-55d63 black-3c85d square-e3\" style=\"width:62px;height:62px;\" id=\"e3-b829-d2ad-84d1-93a2-b416-c9a3-e844-8254\" data-square=\"e3\"></div><div class=\"square-55d63 white-1e1d7 square-f3\" style=\"width:62px;height:62px;\" id=\"f3-d424-6326-98d7-6b5d-3405-fbfc-907b-9ddb\" data-square=\"f3\"></div><div class=\"square-55d63 black-3c85d square-g3\" style=\"width:62px;height:62px;\" id=\"g3-2a18-2df2-7d54-d7a5-79dd-eb09-808c-bb0d\" data-square=\"g3\"></div><div class=\"square-55d63 white-1e1d7 square-h3\" style=\"width:62px;height:62px;\" id=\"h3-eab7-5d34-3424-24f3-a301-edb9-386b-9bd6\" data-square=\"h3\"></div><div class=\"clearfix-7da63\"></div></div><div class=\"row-5277c\"><div class=\"square-55d63 white-1e1d7 square-a2\" style=\"width:62px;height:62px;\" id=\"a2-5824-3315-3d16-10fb-e3bf-603b-1930-ea25\" data-square=\"a2\"><div class=\"notation-322f9 numeric-fc462\">2</div><img src=\"https://chessboardjs.com/img/chesspieces/alpha/wP.png\" alt=\"\" class=\"piece-417db\" data-piece=\"wP\" style=\"width:62px;height:62px;\"></div><div class=\"square-55d63 black-3c85d square-b2\" style=\"width:62px;height:62px;\" id=\"b2-90a0-519c-2f30-39a1-acba-e3d3-13ab-e41b\" data-square=\"b2\"><img src=\"https://chessboardjs.com/img/chesspieces/alpha/wP.png\" alt=\"\" class=\"piece-417db\" data-piece=\"wP\" style=\"width:62px;height:62px;\"></div><div class=\"square-55d63 white-1e1d7 square-c2\" style=\"width:62px;height:62px;\" id=\"c2-96a0-5f8c-82c4-8a9f-f445-a463-965a-0b16\" data-square=\"c2\"><img src=\"https://chessboardjs.com/img/chesspieces/alpha/wP.png\" alt=\"\" class=\"piece-417db\" data-piece=\"wP\" style=\"width:62px;height:62px;\"></div><div class=\"square-55d63 black-3c85d square-d2\" style=\"width:62px;height:62px;\" id=\"d2-634c-da40-e071-6cd4-f422-21da-2430-4c71\" data-square=\"d2\"><img src=\"https://chessboardjs.com/img/chesspieces/alpha/wP.png\" alt=\"\" class=\"piece-417db\" data-piece=\"wP\" style=\"width:62px;height:62px;\"></div><div class=\"square-55d63 white-1e1d7 square-e2\" style=\"width:62px;height:62px;\" id=\"e2-312e-5257-1c05-f89e-399c-9953-c4d4-5408\" data-square=\"e2\"></div><div class=\"square-55d63 black-3c85d square-f2\" style=\"width:62px;height:62px;\" id=\"f2-3097-cfc6-a202-0fc7-eeb2-a123-9fec-e395\" data-square=\"f2\"><img src=\"https://chessboardjs.com/img/chesspieces/alpha/wP.png\" alt=\"\" class=\"piece-417db\" data-piece=\"wP\" style=\"width:62px;height:62px;\"></div><div class=\"square-55d63 white-1e1d7 square-g2\" style=\"width:62px;height:62px;\" id=\"g2-9b44-9ae5-ffe6-2a34-1640-148e-5598-435a\" data-square=\"g2\"><img src=\"https://chessboardjs.com/img/chesspieces/alpha/wP.png\" alt=\"\" class=\"piece-417db\" data-piece=\"wP\" style=\"width:62px;height:62px;\"></div><div class=\"square-55d63 black-3c85d square-h2\" style=\"width:62px;height:62px;\" id=\"h2-9a7d-b7a0-4e0a-820b-1ee1-9178-96d4-4d33\" data-square=\"h2\"><img src=\"https://chessboardjs.com/img/chesspieces/alpha/wP.png\" alt=\"\" class=\"piece-417db\" data-piece=\"wP\" style=\"width:62px;height:62px;\"></div><div class=\"clearfix-7da63\"></div></div><div class=\"row-5277c\"><div class=\"square-55d63 black-3c85d square-a1\" style=\"width:62px;height:62px;\" id=\"a1-8bf6-c71b-8140-7725-bee2-77f6-e1ed-e075\" data-square=\"a1\"><div class=\"notation-322f9 alpha-d2270\">a</div><div class=\"notation-322f9 numeric-fc462\">1</div><img src=\"https://chessboardjs.com/img/chesspieces/alpha/wR.png\" alt=\"\" class=\"piece-417db\" data-piece=\"wR\" style=\"width:62px;height:62px;\"></div><div class=\"square-55d63 white-1e1d7 square-b1\" style=\"width:62px;height:62px;\" id=\"b1-8223-c049-bc3f-e53b-7035-e378-4717-0671\" data-square=\"b1\"><div class=\"notation-322f9 alpha-d2270\">b</div><img src=\"https://chessboardjs.com/img/chesspieces/alpha/wN.png\" alt=\"\" class=\"piece-417db\" data-piece=\"wN\" style=\"width:62px;height:62px;\"></div><div class=\"square-55d63 black-3c85d square-c1\" style=\"width:62px;height:62px;\" id=\"c1-ec89-4005-db42-83a0-b866-9f89-5e9c-eafd\" data-square=\"c1\"><div class=\"notation-322f9 alpha-d2270\">c</div><img src=\"https://chessboardjs.com/img/chesspieces/alpha/wB.png\" alt=\"\" class=\"piece-417db\" data-piece=\"wB\" style=\"width:62px;height:62px;\"></div><div class=\"square-55d63 white-1e1d7 square-d1\" style=\"width:62px;height:62px;\" id=\"d1-2552-f71f-1dd0-43bb-dc36-a10a-2e57-b91d\" data-square=\"d1\"><div class=\"notation-322f9 alpha-d2270\">d</div><img src=\"https://chessboardjs.com/img/chesspieces/alpha/wQ.png\" alt=\"\" class=\"piece-417db\" data-piece=\"wQ\" style=\"width:62px;height:62px;\"></div><div class=\"square-55d63 black-3c85d square-e1\" style=\"width:62px;height:62px;\" id=\"e1-8e27-dd52-68ca-baf3-f95e-4d0f-abed-6665\" data-square=\"e1\"><div class=\"notation-322f9 alpha-d2270\">e</div><img src=\"https://chessboardjs.com/img/chesspieces/alpha/wK.png\" alt=\"\" class=\"piece-417db\" data-piece=\"wK\" style=\"width:62px;height:62px;\"></div><div class=\"square-55d63 white-1e1d7 square-f1\" style=\"width:62px;height:62px;\" id=\"f1-6869-128a-4455-883a-b245-9546-75e5-3ed7\" data-square=\"f1\"><div class=\"notation-322f9 alpha-d2270\">f</div><img src=\"https://chessboardjs.com/img/chesspieces/alpha/wB.png\" alt=\"\" class=\"piece-417db\" data-piece=\"wB\" style=\"width:62px;height:62px;\"></div><div class=\"square-55d63 black-3c85d square-g1\" style=\"width:62px;height:62px;\" id=\"g1-aaec-ca71-0848-c987-bb2c-060f-0bfe-e04d\" data-square=\"g1\"><div class=\"notation-322f9 alpha-d2270\">g</div><img src=\"https://chessboardjs.com/img/chesspieces/alpha/wN.png\" alt=\"\" class=\"piece-417db\" data-piece=\"wN\" style=\"width:62px;height:62px;\"></div><div class=\"square-55d63 white-1e1d7 square-h1\" style=\"width:62px;height:62px;\" id=\"h1-84c3-3a80-b3da-6fa0-c392-0730-2b19-ad46\" data-square=\"h1\"><div class=\"notation-322f9 alpha-d2270\">h</div><img src=\"https://chessboardjs.com/img/chesspieces/alpha/wR.png\" alt=\"\" class=\"piece-417db\" data-piece=\"wR\" style=\"width:62px;height:62px;\"></div><div class=\"clearfix-7da63\"></div></div></div></div></div>\n    </div>\n\n\n\n",
      "type": "html"
    },
    {
      "code": "<style>\n  #status {\n            font-size: 24px;\n            font-weight: bold;\n            margin-top: 20px;\n            text-align: center;\n        }\n\n        /* Default color for the status message */\n        #status.default {\n            color: #333;\n        }\n\n        /* White's turn */\n        #status.white-turn {\n            color: white;\n            background-color: #333;\n            padding: 10px;\n        }\n\n        /* Black's turn */\n        #status.black-turn {\n            color: black;\n            background-color: #ddd;\n            padding: 10px;\n        }\n\n        /* Game over with checkmate */\n        #status.checkmate {\n            color: white;\n            background-color: red;\n            padding: 15px;\n            font-size: 28px;\n        }\n\n        /* Game over with draw/stalemate */\n        #status.draw {\n            color: black;\n            background-color: yellow;\n            padding: 15px;\n            font-size: 28px;\n        }\n</style>",
      "status": "",
      "output": "<style>\n  #status {\n            font-size: 24px;\n            font-weight: bold;\n            margin-top: 20px;\n            text-align: center;\n        }\n\n        /* Default color for the status message */\n        #status.default {\n            color: #333;\n        }\n\n        /* White's turn */\n        #status.white-turn {\n            color: white;\n            background-color: #333;\n            padding: 10px;\n        }\n\n        /* Black's turn */\n        #status.black-turn {\n            color: black;\n            background-color: #ddd;\n            padding: 10px;\n        }\n\n        /* Game over with checkmate */\n        #status.checkmate {\n            color: white;\n            background-color: red;\n            padding: 15px;\n            font-size: 28px;\n        }\n\n        /* Game over with draw/stalemate */\n        #status.draw {\n            color: black;\n            background-color: yellow;\n            padding: 15px;\n            font-size: 28px;\n        }\n</style>",
      "type": "html"
    },
    {
      "code": "await scrib.loadScript(\"https://code.jquery.com/jquery-3.5.1.min.js\");\nawait scrib.loadScript(\"https://unpkg.com/@chrisoakman/chessboardjs@1.0.0/dist/chessboard-1.0.0.min.js\");\nawait scrib.loadScript(\"https://cdnjs.cloudflare.com/ajax/libs/chess.js/0.10.3/chess.min.js\")\nawait scrib.loadCSS(\"https://unpkg.com/@chrisoakman/chessboardjs@1.0.0/dist/chessboard-1.0.0.min.css\");\n<!-- Add Firebase SDK (for Realtime Database) -->",
      "status": "[1]<br><span style=\"font-size:8px\">66ms<span></span></span>",
      "output": "",
      "type": "code"
    },
    {
      "code": "const firebaseAppModule = await import(\"https://www.gstatic.com/firebasejs/10.12.2/firebase-app.js\"); \nconst firebaseAuthModule = await import(\"https://www.gstatic.com/firebasejs/10.12.2/firebase-auth.js\"); \nconst firebaseFirestoreModule = await import(\"https://www.gstatic.com/firebasejs/10.12.2/firebase-firestore.js\"); \nconst { initializeApp } = firebaseAppModule;\nconst { getAuth } = firebaseAuthModule;\nconst { getFirestore } = firebaseFirestoreModule; // Initialize Firebase Configuration\nconst firebaseConfig = { apiKey: \"AIzaSyAJrRZ6xehvVQk0PuCMhsVNfeNsJzXVmCY\", authDomain: \"vchess-82304.firebaseapp.com\", databaseURL: \"https://vchess-82304-default-rtdb.asia-southeast1.firebasedatabase.app\", projectId: \"vchess-82304\", storageBucket: \"vchess-82304.firebasestorage.app\", messagingSenderId: \"630416421002\", appId: \"1:630416421002:web:604dabeccb74ac778f7d73\", measurementId: \"G-YF3S8Y3FPK\" }; // Initialize Firebase App and services \nconst app = initializeApp(firebaseConfig); \nconst auth = getAuth(app);\nconst db = getFirestore(app); console.log(\"Firebase initialized:\", app);",
      "status": "[2]<br><span style=\"font-size:8px\">125ms<span></span></span>",
      "output": "",
      "type": "code"
    },
    {
      "code": "<style>\n        /* Status message styles */\n        #status {\n            font-size: 24px;\n            font-weight: bold;\n            margin-top: 20px;\n            text-align: center;\n        }\n\n        /* Default color for the status message */\n        #status.default {\n            color: #333;\n        }\n\n        /* White's turn */\n        #status.white-turn {\n            color: white;\n            background-color: #333;\n            padding: 10px;\n        }\n\n        /* Black's turn */\n        #status.black-turn {\n            color: black;\n            background-color: #ddd;\n            padding: 10px;\n        }\n\n        /* Game over with checkmate */\n        #status.checkmate {\n            color: white;\n            background-color: red;\n            padding: 15px;\n            font-size: 28px;\n        }\n\n        /* Game over with draw/stalemate */\n        #status.draw {\n            color: black;\n            background-color: yellow;\n            padding: 15px;\n            font-size: 28px;\n        }\n    </style>",
      "status": "",
      "output": "<style>\n        /* Status message styles */\n        #status {\n            font-size: 24px;\n            font-weight: bold;\n            margin-top: 20px;\n            text-align: center;\n        }\n\n        /* Default color for the status message */\n        #status.default {\n            color: #333;\n        }\n\n        /* White's turn */\n        #status.white-turn {\n            color: white;\n            background-color: #333;\n            padding: 10px;\n        }\n\n        /* Black's turn */\n        #status.black-turn {\n            color: black;\n            background-color: #ddd;\n            padding: 10px;\n        }\n\n        /* Game over with checkmate */\n        #status.checkmate {\n            color: white;\n            background-color: red;\n            padding: 15px;\n            font-size: 28px;\n        }\n\n        /* Game over with draw/stalemate */\n        #status.draw {\n            color: black;\n            background-color: yellow;\n            padding: 15px;\n            font-size: 28px;\n        }\n    </style>",
      "type": "html"
    },
    {
      "code": "// Initialize SpeechRecognition and set properties\nvar SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\nvar recognition = new SpeechRecognition();\nrecognition.lang = 'en-US';\nrecognition.interimResults = false;\nrecognition.maxAlternatives = 1;\n\n// Set flags to manage the state\nlet isRecognitionActive = false;\n\n// Handle recognition errors\nrecognition.onerror = function(event) {\n  console.error(\"Speech recognition error:\", event.error);\n  scrib.show(\"Speech recognition error:\", event.error);\n};\n\n// Handle start and end events\nrecognition.onstart = function() {\n  isRecognitionActive = true;\n  console.log(\"Speech recognition started.\");\n  scrib.show(\"Speech recognition started. Please speak your move.\");\n};\n\nrecognition.onend = function() {\n  isRecognitionActive = false;\n  console.log(\"Speech recognition stopped.\");\n  scrib.show(\"Speech recognition stopped.\");\n};\n\n// Handle speech results\nrecognition.onresult = function(event) {\n  var transcript = event.results[0][0].transcript.toLowerCase();\n  console.log(\"Voice command received:\", transcript);\n  scrib.show(\"Voice command received:\", transcript);\n  processVoiceCommand(transcript);\n};\n\n// Function to start recognition safely\nfunction startRecognition() {\n  if (isRecognitionActive) {\n    recognition.stop(); // Stop recognition if already active\n  }\n  recognition.start(); // Start recognition\n}\n\n// Start listening on a button click\ndocument.getElementById('startVoiceControl').addEventListener('click', function() {\n  startRecognition();\n  console.log(\"Voice control started. Please speak your move.\");\n  scrib.show(\"Voice control started. Please speak your move.\");\n});\n\n// Process voice command and handle moves\nfunction processVoiceCommand(command) {\n  // Regular expression to capture \"move [piece] [source] to [target]\" pattern\n  var movePattern = /(?:move\\s+)?(?:(pawn|knight|bishop|rook|queen|king)\\s+)?([a-h][1-8])\\s+to\\s+([a-h][1-8])/i;\n  \n  // Check if the voice command matches the pattern\n  var moveMatch = command.match(movePattern);\n  \n  if (moveMatch) {\n    var piece = moveMatch[1] ? moveMatch[1].toLowerCase() : null; // Capture piece if specified\n    var sourceSquare = moveMatch[2];\n    var targetSquare = moveMatch[3];\n    \n    // If no piece specified, detect piece on the source square\n    if (!piece) {\n      var pieceOnSource = game.get(sourceSquare);\n      if (pieceOnSource) {\n        piece = pieceOnSource.type; // Get piece type from board\n      } else {\n        scrib.show(`No piece found on ${sourceSquare}. Try a valid source square.`);\n        return;\n      }\n    }\n\n    // Map pieces to their chess notation\n    var pieceNotation = {\n      p: '',   // Pawn (no notation)\n      n: 'N',  // Knight\n      b: 'B',  // Bishop\n      r: 'R',  // Rook\n      q: 'Q',  // Queen\n      k: 'K'   // King\n    };\n    var pieceSymbol = pieceNotation[piece[0]];\n\n    // Find the valid source square for the piece and target square\n    var sourceSquareFound = findSourceSquare(pieceSymbol, sourceSquare, targetSquare);\n\n    if (sourceSquareFound) {\n      // Execute the move if it's legal\n      var move = game.move({\n        from: sourceSquareFound,\n        to: targetSquare,\n        promotion: 'q' // Auto-promote to queen\n      });\n\n      if (move) {\n        board2.position(game.fen());\n        updateStatus();\n        updateMoveHistory(move.san);\n        scrib.show(`Move executed: ${piece} from ${sourceSquareFound} to ${targetSquare}`);\n      } else {\n        scrib.show(\"Illegal move. Try again.\");\n        console.error(\"Illegal move attempted:\", sourceSquareFound, \"to\", targetSquare);\n      }\n    } else {\n      scrib.show(\"Could not determine a valid source square for the move.\");\n    }\n  } else {\n    scrib.show(\"Invalid command format. Please say moves like 'move e2 to e3' or 'move knight g1 to f3'.\");\n  }\n}\n\n// Find source square for specified piece and target\nfunction findSourceSquare(pieceSymbol, sourceSquare, targetSquare) {\n  var moves = game.moves({ verbose: true });\n  var matchingMoves = moves.filter(function(m) {\n    return (!pieceSymbol || m.piece === pieceSymbol.toLowerCase()) && m.from === sourceSquare && m.to === targetSquare;\n  });\n\n  return matchingMoves.length > 0 ? matchingMoves[0].from : null;\n}\n\n\n// Chessboard and game event functions\nvar board2 = ChessBoard('board2', {\n      draggable: true,\n      pieceTheme: 'https://chessboardjs.com/img/chesspieces/alpha/{piece}.png',\n      dropOffBoard: 'trash',\n      onDragStart: onDragStart,\n      onDrop: onDrop,\n      onSnapEnd: onSnapEnd\n    });\n\n    var game = new Chess();\n    var gameOver = false; // Flag to track if the game is over\n\n    // Function to prevent illegal moves or moves by the wrong player\n    function onDragStart(source, piece, position, orientation) {\n      if (gameOver) return false; // Disable dragging if the game is over\n      if ((game.turn() === 'w' && piece.startsWith('b')) || \n          (game.turn() === 'b' && piece.startsWith('w'))) {\n        return false;\n      }\n    }\n\n    // Function to handle piece drop and validate move\n    function onDrop(source, target) {\n      if (gameOver) return 'snapback'; // Disable dropping if the game is over\n\n      var move = game.move({\n        from: source,\n        to: target,\n        promotion: 'q'  // Auto-promote to queen for simplicity\n      });\n\n      if (move === null) return 'snapback';  // Illegal move\n      updateStatus();  // Update game status after each valid move\n      updateMoveHistory(move.san);  // Add the move to the move history\n    }\n\n    // Sync board position with game state after each move\n    function onSnapEnd() {\n      board2.position(game.fen());\n    }\n\n    // Function to update board and game status\n    function updateStatus() {\n      var status = '';\n\n      if (game.in_checkmate()) {\n        status = 'Game over, ' + (game.turn() === 'w' ? 'White' : 'Black') + ' is in checkmate.';\n        gameOver = true; // Set game over flag\n      } else if (game.in_draw() || game.in_stalemate() || game.in_threefold_repetition() || game.insufficient_material()) {\n        status = 'Game over, it\\'s a draw!';\n        gameOver = true; // Set game over flag\n      } else {\n        status = (game.turn() === 'w' ? 'White' : 'Black') + ' to move';\n        if (game.in_check()) {\n          status += ', in check!';\n        }\n      }\n\n      document.getElementById('status').innerText = status; // Display status message\n    }\n\n    // Function to update move history display\n    var moveHistory = []; // To store the move history\n\n    function updateMoveHistory(move) {\n  // Add the move to the history\n  moveHistory.push(move);\n\n  // Keep only the most recent 8 moves\n  if (moveHistory.length > 8) {\n    moveHistory.shift(); // Remove the oldest move\n  }\n\n  // Update the move list display\n  var movesList = document.getElementById('movesList');\n  movesList.innerHTML = ''; // Clear the current move list\n\n  // Iterate over the history and display moves in the required format\n  moveHistory.forEach(function (move, index) {\n    // If it's the first move (index 0), calculate the turn explicitly\n    var currentTurn = (index % 2 === 0) ? 'w' : 'b'; // White moves first (even index is white)\n\n    // Get the color and piece from the move and format it\n    var moveText = formatMove(move, currentTurn); // Use calculated turn for formatting\n    var moveItem = document.createElement('div');\n    moveItem.textContent = moveText;\n    movesList.appendChild(moveItem);\n  });\n}\n\n\n    // Format the move as \"white-pawn-d6\" or \"black-pawn-d5\"\nfunction formatMove(move, turn) {\n  // Determine the color of the player making the move\n  var color = (turn === 'w') ? 'white' : 'black'; // 'w' for white and 'b' for black\n  \n  // Map the first character to the piece type\n  var piece;\n  var moveIndex = 0;  // To track if the move starts with a piece character\n  \n  // Check if the first character is a valid piece (Knight, Rook, King, Queen)\n  if (move.charAt(0) === 'N') {\n    piece = 'knight';\n    moveIndex = 1;  // Skip the first character (since it's part of the piece)\n  } else if (move.charAt(0) === 'R') {\n    piece = 'rook';\n    moveIndex = 1;\n  } else if (move.charAt(0) === 'K') {\n    piece = 'king';\n    moveIndex = 1;\n  } else if (move.charAt(0) === 'Q') {\n    piece = 'queen';\n    moveIndex = 1;\n  } else if (move.charAt(0) === 'B') {\n    piece = 'bishop';\n    moveIndex = 1;\n  } else {\n    piece = 'pawn';  // If no piece character, it's a pawn\n    moveIndex = 0;  // No need to skip any character\n  }\n\n  // Remove any capture or check symbols for easier parsing\n  var cleanedMove = move.replace(/[x+]/g, ''); // Remove 'x' (captures) and '+' (checks)\n\n  // Determine the target square (last two characters of the move)\n  var targetSquare = cleanedMove.slice(-2);\n\n  // Handle pawn captures and simple moves\n  if (piece === 'pawn') {\n    if (move.length > 3) {\n      // Pawn capture move (e.g., e5xd6 -> white-pawn-e5-x-d6)\n      var captureSquare = move.slice(2, 4);  // Capture destination (e.g., \"d6\" in e5xd6)\n      return color + '-pawn-' + '-x-' + captureSquare;\n    } else {\n      // Simple pawn move (e.g., e2-e4 -> white-pawn-e4)\n      return color + '-pawn-' + targetSquare;\n    }\n  } else {\n    // Handle non-pawn pieces (e.g., Knight, Rook, etc.)\n    var capture = move.includes('x'); // Check if it's a capture (e.g., Rxd4)\n\n    if (capture) {\n      // Format capture moves (e.g., Rook capture: Rxd5 -> white-rook-d4-x-d5)\n      return color + '-' + piece + '-' + '-x-' + targetSquare;\n    } else {\n      // Non-capture piece move (e.g., Knight move: Nf3 -> white-knight-f3)\n      return color + '-' + piece + '-' + targetSquare;\n    }\n  }\n}\n\n\n\n\n    // Button controls to reset and clear the board\n    document.getElementById('startBtn').addEventListener('click', function() {\n      game.reset();  // Reset chess game\n      board2.start(); // Reset chessboard visualization\n      gameOver = false; // Reset game over flag\n      updateStatus(); // Update the status\n      document.getElementById('movesList').innerHTML = '';  // Clear the move history\n\t  moveHistory = [];\n    });\n\n    document.getElementById('clearBtn').addEventListener('click', function() {\n      game.clear();   // Clear chess game\n      board2.clear(); // Clear chessboard visualization\n      gameOver = false; // Reset game over flag\n      document.getElementById('status').innerText = 'Board cleared.'; // Clear status\n      document.getElementById('movesList').innerHTML = '';  // Clear the move history\n    });\n\n    updateStatus();",
      "status": "[3]<br><span style=\"font-size:8px\">48ms<span></span></span>",
      "output": "Voice control started. Please speak your move. <br>Speech recognition started. Please speak your move. <br>Voice command received: move <br>Invalid command format. Please say moves like 'move e2 to e3' or 'move knight g1 to f3'. <br>Speech recognition stopped. <br>Voice control started. Please speak your move. <br>Speech recognition started. Please speak your move. <br>Voice command received: move e-12 <br>Invalid command format. Please say moves like 'move e2 to e3' or 'move knight g1 to f3'. <br>Speech recognition stopped. <br>Voice control started. Please speak your move. <br>Speech recognition started. Please speak your move. <br>Speech recognition stopped. <br>Voice control started. Please speak your move. <br>Speech recognition started. Please speak your move. <br>Voice command received: move e2 e4 <br>Invalid command format. Please say moves like 'move e2 to e3' or 'move knight g1 to f3'. <br>Speech recognition stopped. <br>Voice control started. Please speak your move. <br>Speech recognition started. Please speak your move. <br>Voice command received: move e2 to e4 <br>Move executed: p from e2 to e4 <br>Speech recognition stopped. <br>Voice control started. Please speak your move. <br>Speech recognition started. Please speak your move. <br>Voice command received: move d7 to d5 <br>Move executed: p from d7 to d5 <br>Speech recognition stopped. <br>Voice control started. Please speak your move. <br>Speech recognition started. Please speak your move. <br>Voice command received: move e42 d5 <br>Invalid command format. Please say moves like 'move e2 to e3' or 'move knight g1 to f3'. <br>Speech recognition stopped. <br>Voice control started. Please speak your move. <br>Speech recognition started. Please speak your move. <br>Voice command received: move e4 to d5 <br>Move executed: p from e4 to d5 <br>Speech recognition stopped. <br>Voice control started. Please speak your move. <br>Speech recognition started. Please speak your move. <br>Speech recognition stopped. <br>",
      "type": "code"
    }
  ],
  "source": "https://github.com/gopi-suvanam/jsnb",
  "run_on_load": false
}