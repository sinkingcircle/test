{
  "metadata": {
    "name": "VCHESS devs only",
    "language_info": {
      "name": "JavaScipt",
      "version": "8.0"
    }
  },
  "jsnbversion": "v0.1",
  "cells": [
    {
      "code": "<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Chessboard with Rules</title>\n    <link rel=\"stylesheet\" href=\"https://unpkg.com/@chrisoakman/chessboardjs@1.0.0/dist/chessboard-1.0.0.min.css\" />\n    <script src=\"https://unpkg.com/@chrisoakman/chessboardjs@1.0.0/dist/chessboard-1.0.0.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/chess.js/0.12.0/chess.min.js\"></script>\n  </head>\n    \n  <body>\n\t<center><p id=\"status\"></p></center> <!-- Display the game status here -->\n    <div style=\"display: flex; align-items: center; justify-content: center; margin-top: 10px;\">\n        <!-- Buttons container aligned side by side -->\n        <div style=\"margin-right: 20px;\">\n            <button id=\"startBtn\" style=\"margin-right: 10px;\">Start Position</button>\n            <button id=\"clearBtn\">Clear Board</button>\n\t\t\t<button id=\"startVoiceControl\">Start Voice Control</button>\n\t\t\t<p>Say commands like \"move knight to f3\"</p>\n\t\t\t<p> P.S You can also play manually </p>\n\t\t\t<div id=\"moveHistory\" style=\"margin-top: 20px; font-size: 18px;\">\n  <strong> Recent Moves:</strong>\n  <div id=\"movesList\"></div> <!-- Moves will be displayed here -->\n</div>\n        </div>\n        \n        <!-- Chessboard -->\n        <div id=\"board2\" style=\"width: 500px\"></div>\n    </div>\n\n</body>\n\n</html>",
      "status": "",
      "output": "\n  \n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Chessboard with Rules</title>\n    <link rel=\"stylesheet\" href=\"https://unpkg.com/@chrisoakman/chessboardjs@1.0.0/dist/chessboard-1.0.0.min.css\">\n    <script src=\"https://unpkg.com/@chrisoakman/chessboardjs@1.0.0/dist/chessboard-1.0.0.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/chess.js/0.12.0/chess.min.js\"></script>\n  \n    \n  \n\t<center><p id=\"status\">White to move</p></center> <!-- Display the game status here -->\n    <div style=\"display: flex; align-items: center; justify-content: center; margin-top: 10px;\">\n        <!-- Buttons container aligned side by side -->\n        <div style=\"margin-right: 20px;\">\n            <button id=\"startBtn\" style=\"margin-right: 10px;\">Start Position</button>\n            <button id=\"clearBtn\">Clear Board</button>\n\t\t\t<button id=\"startVoiceControl\">Start Voice Control</button>\n\t\t\t<p>Say commands like \"move knight to f3\"</p>\n\t\t\t<p> P.S You can also play manually </p>\n\t\t\t<div id=\"moveHistory\" style=\"margin-top: 20px; font-size: 18px;\">\n  <strong> Recent Moves:</strong>\n  <div id=\"movesList\"></div> <!-- Moves will be displayed here -->\n</div>\n        </div>\n        \n        <!-- Chessboard -->\n        <div id=\"board2\" style=\"width: 500px\"><div class=\"chessboard-63f37\"><div class=\"board-b72b1\" style=\"width: 496px;\"><div class=\"row-5277c\"><div class=\"square-55d63 white-1e1d7 square-a8\" style=\"width:62px;height:62px;\" id=\"a8-8ea9-b546-8a0a-f284-9c78-11aa-9473-cd10\" data-square=\"a8\"><div class=\"notation-322f9 numeric-fc462\">8</div></div><div class=\"square-55d63 black-3c85d square-b8\" style=\"width:62px;height:62px;\" id=\"b8-ebd6-2f48-8d2d-2196-2b01-9d1c-1854-445d\" data-square=\"b8\"></div><div class=\"square-55d63 white-1e1d7 square-c8\" style=\"width:62px;height:62px;\" id=\"c8-a235-6091-7068-10fe-1617-6e58-8f83-3374\" data-square=\"c8\"></div><div class=\"square-55d63 black-3c85d square-d8\" style=\"width:62px;height:62px;\" id=\"d8-73e6-bb27-d371-c9d7-c557-980c-d8de-c881\" data-square=\"d8\"></div><div class=\"square-55d63 white-1e1d7 square-e8\" style=\"width:62px;height:62px;\" id=\"e8-38ec-c757-180e-150c-f303-6e6f-3b68-c886\" data-square=\"e8\"></div><div class=\"square-55d63 black-3c85d square-f8\" style=\"width:62px;height:62px;\" id=\"f8-588b-afd9-218f-1ba8-0988-abcd-90a6-c058\" data-square=\"f8\"></div><div class=\"square-55d63 white-1e1d7 square-g8\" style=\"width:62px;height:62px;\" id=\"g8-977f-4a76-15fd-1bf9-92e4-0cd9-d4bd-e3a5\" data-square=\"g8\"></div><div class=\"square-55d63 black-3c85d square-h8\" style=\"width:62px;height:62px;\" id=\"h8-501c-d826-eaa2-c8a8-04a4-8be4-a84e-7434\" data-square=\"h8\"></div><div class=\"clearfix-7da63\"></div></div><div class=\"row-5277c\"><div class=\"square-55d63 black-3c85d square-a7\" style=\"width:62px;height:62px;\" id=\"a7-3ea9-4b76-6f43-5d71-a9f5-4b49-9ec8-5dfb\" data-square=\"a7\"><div class=\"notation-322f9 numeric-fc462\">7</div></div><div class=\"square-55d63 white-1e1d7 square-b7\" style=\"width:62px;height:62px;\" id=\"b7-429c-d195-247d-cb50-dae7-bc1f-ce09-8e8e\" data-square=\"b7\"></div><div class=\"square-55d63 black-3c85d square-c7\" style=\"width:62px;height:62px;\" id=\"c7-eb6e-3573-94e4-f011-eed0-2eef-d319-977c\" data-square=\"c7\"></div><div class=\"square-55d63 white-1e1d7 square-d7\" style=\"width:62px;height:62px;\" id=\"d7-5e74-9c9a-3294-4b99-ff5c-280d-f56d-762a\" data-square=\"d7\"></div><div class=\"square-55d63 black-3c85d square-e7\" style=\"width:62px;height:62px;\" id=\"e7-2c46-dd50-ba0a-3afe-7b9b-e55a-34ad-852e\" data-square=\"e7\"></div><div class=\"square-55d63 white-1e1d7 square-f7\" style=\"width:62px;height:62px;\" id=\"f7-ec5f-c395-ee4c-fb0b-3c59-c399-ac36-3a3f\" data-square=\"f7\"></div><div class=\"square-55d63 black-3c85d square-g7\" style=\"width:62px;height:62px;\" id=\"g7-342f-e3c0-9815-31d8-d492-02a1-6083-d5c1\" data-square=\"g7\"></div><div class=\"square-55d63 white-1e1d7 square-h7\" style=\"width:62px;height:62px;\" id=\"h7-d17a-9869-69a3-07fc-336d-bb14-8980-e589\" data-square=\"h7\"></div><div class=\"clearfix-7da63\"></div></div><div class=\"row-5277c\"><div class=\"square-55d63 white-1e1d7 square-a6\" style=\"width:62px;height:62px;\" id=\"a6-fffa-728e-a567-9c16-1891-cc0d-fb57-eff9\" data-square=\"a6\"><div class=\"notation-322f9 numeric-fc462\">6</div></div><div class=\"square-55d63 black-3c85d square-b6\" style=\"width:62px;height:62px;\" id=\"b6-24ee-87da-decc-1f16-8177-9f37-d533-4e73\" data-square=\"b6\"></div><div class=\"square-55d63 white-1e1d7 square-c6\" style=\"width:62px;height:62px;\" id=\"c6-3dc9-0668-59d9-c06f-f52b-4839-1248-6270\" data-square=\"c6\"></div><div class=\"square-55d63 black-3c85d square-d6\" style=\"width:62px;height:62px;\" id=\"d6-09b6-65f0-8333-5b59-7681-071e-f7a7-31ce\" data-square=\"d6\"></div><div class=\"square-55d63 white-1e1d7 square-e6\" style=\"width:62px;height:62px;\" id=\"e6-3043-963f-03d1-5e8e-306d-c8b0-5f4a-b35d\" data-square=\"e6\"></div><div class=\"square-55d63 black-3c85d square-f6\" style=\"width:62px;height:62px;\" id=\"f6-9b9f-5605-259b-a7bf-2828-e395-8663-c4b4\" data-square=\"f6\"></div><div class=\"square-55d63 white-1e1d7 square-g6\" style=\"width:62px;height:62px;\" id=\"g6-5bb8-9eba-2f3b-346e-4226-2d52-38ae-06d5\" data-square=\"g6\"></div><div class=\"square-55d63 black-3c85d square-h6\" style=\"width:62px;height:62px;\" id=\"h6-7fcb-a950-ab5b-13fe-060e-178f-907f-08ae\" data-square=\"h6\"></div><div class=\"clearfix-7da63\"></div></div><div class=\"row-5277c\"><div class=\"square-55d63 black-3c85d square-a5\" style=\"width:62px;height:62px;\" id=\"a5-c3d6-085b-220c-9e04-87f3-cf5c-2249-5376\" data-square=\"a5\"><div class=\"notation-322f9 numeric-fc462\">5</div></div><div class=\"square-55d63 white-1e1d7 square-b5\" style=\"width:62px;height:62px;\" id=\"b5-4a42-5112-24c1-8c52-efdb-c54e-1f2b-ab95\" data-square=\"b5\"></div><div class=\"square-55d63 black-3c85d square-c5\" style=\"width:62px;height:62px;\" id=\"c5-8814-3a5e-cca1-aca9-9212-f747-de7d-716f\" data-square=\"c5\"></div><div class=\"square-55d63 white-1e1d7 square-d5\" style=\"width:62px;height:62px;\" id=\"d5-fd4c-0bfa-af83-e4eb-e839-2189-0aa5-2ae9\" data-square=\"d5\"></div><div class=\"square-55d63 black-3c85d square-e5\" style=\"width:62px;height:62px;\" id=\"e5-f09f-a069-3af0-9ed8-422d-a0ca-3ad9-a8f4\" data-square=\"e5\"></div><div class=\"square-55d63 white-1e1d7 square-f5\" style=\"width:62px;height:62px;\" id=\"f5-3792-2301-ea27-0d1a-42e1-5bd3-6d29-bf0c\" data-square=\"f5\"></div><div class=\"square-55d63 black-3c85d square-g5\" style=\"width:62px;height:62px;\" id=\"g5-2ffa-402e-5d16-aa59-0c57-99f0-dd6f-7d31\" data-square=\"g5\"></div><div class=\"square-55d63 white-1e1d7 square-h5\" style=\"width:62px;height:62px;\" id=\"h5-dc62-9c80-3d4e-5952-4ff9-6dde-4015-04e7\" data-square=\"h5\"></div><div class=\"clearfix-7da63\"></div></div><div class=\"row-5277c\"><div class=\"square-55d63 white-1e1d7 square-a4\" style=\"width:62px;height:62px;\" id=\"a4-65d8-d32c-6ecd-9bb7-98ec-5047-2d53-4895\" data-square=\"a4\"><div class=\"notation-322f9 numeric-fc462\">4</div></div><div class=\"square-55d63 black-3c85d square-b4\" style=\"width:62px;height:62px;\" id=\"b4-7ca1-3b3c-77eb-da1f-0e6c-3902-dc6f-e41a\" data-square=\"b4\"></div><div class=\"square-55d63 white-1e1d7 square-c4\" style=\"width:62px;height:62px;\" id=\"c4-71b6-6988-8036-95e1-5278-adc4-9444-4edd\" data-square=\"c4\"></div><div class=\"square-55d63 black-3c85d square-d4\" style=\"width:62px;height:62px;\" id=\"d4-b317-4a0d-9f4d-909f-2f5f-416e-522c-dd2f\" data-square=\"d4\"></div><div class=\"square-55d63 white-1e1d7 square-e4\" style=\"width:62px;height:62px;\" id=\"e4-3ed5-af18-ebcb-8685-48eb-d92a-7384-2adc\" data-square=\"e4\"></div><div class=\"square-55d63 black-3c85d square-f4\" style=\"width:62px;height:62px;\" id=\"f4-0262-ba31-9687-2ce9-a655-e56f-376d-7576\" data-square=\"f4\"></div><div class=\"square-55d63 white-1e1d7 square-g4\" style=\"width:62px;height:62px;\" id=\"g4-def3-999e-5b98-1763-23b1-260d-a6f1-fce7\" data-square=\"g4\"></div><div class=\"square-55d63 black-3c85d square-h4\" style=\"width:62px;height:62px;\" id=\"h4-7a78-44dc-d602-1c7e-48c6-76a1-fe6b-94de\" data-square=\"h4\"></div><div class=\"clearfix-7da63\"></div></div><div class=\"row-5277c\"><div class=\"square-55d63 black-3c85d square-a3\" style=\"width:62px;height:62px;\" id=\"a3-235d-2204-34cd-d621-7d7c-d86e-4538-498f\" data-square=\"a3\"><div class=\"notation-322f9 numeric-fc462\">3</div></div><div class=\"square-55d63 white-1e1d7 square-b3\" style=\"width:62px;height:62px;\" id=\"b3-95cf-9e13-70e9-b5b6-3ed1-a09d-8aa2-fb36\" data-square=\"b3\"></div><div class=\"square-55d63 black-3c85d square-c3\" style=\"width:62px;height:62px;\" id=\"c3-3c51-a677-7bd9-4220-2766-6169-b192-100a\" data-square=\"c3\"></div><div class=\"square-55d63 white-1e1d7 square-d3\" style=\"width:62px;height:62px;\" id=\"d3-ffcb-8cfd-f620-5954-4f8a-d8d7-ed8b-e4b8\" data-square=\"d3\"></div><div class=\"square-55d63 black-3c85d square-e3\" style=\"width:62px;height:62px;\" id=\"e3-944c-f42a-4aca-1058-a522-65d6-de2a-b7fb\" data-square=\"e3\"></div><div class=\"square-55d63 white-1e1d7 square-f3\" style=\"width:62px;height:62px;\" id=\"f3-b933-c1fb-a251-2b07-f15b-bce9-4793-c26f\" data-square=\"f3\"></div><div class=\"square-55d63 black-3c85d square-g3\" style=\"width:62px;height:62px;\" id=\"g3-f767-02d3-251a-e1ab-d814-49e2-ae50-feac\" data-square=\"g3\"></div><div class=\"square-55d63 white-1e1d7 square-h3\" style=\"width:62px;height:62px;\" id=\"h3-ee12-e2f1-3219-7a70-1fda-0bd4-cf4b-3f17\" data-square=\"h3\"></div><div class=\"clearfix-7da63\"></div></div><div class=\"row-5277c\"><div class=\"square-55d63 white-1e1d7 square-a2\" style=\"width:62px;height:62px;\" id=\"a2-123f-c56a-e266-d13c-92fd-c8f5-4269-78fc\" data-square=\"a2\"><div class=\"notation-322f9 numeric-fc462\">2</div></div><div class=\"square-55d63 black-3c85d square-b2\" style=\"width:62px;height:62px;\" id=\"b2-1b1b-7cf8-ce10-d801-dc98-028f-eb7f-d72d\" data-square=\"b2\"></div><div class=\"square-55d63 white-1e1d7 square-c2\" style=\"width:62px;height:62px;\" id=\"c2-0f1b-bb30-731e-a6f2-80f7-83b0-51d8-3e9c\" data-square=\"c2\"></div><div class=\"square-55d63 black-3c85d square-d2\" style=\"width:62px;height:62px;\" id=\"d2-8cfd-b049-010e-adaa-2451-87d1-ee2b-b0d3\" data-square=\"d2\"></div><div class=\"square-55d63 white-1e1d7 square-e2\" style=\"width:62px;height:62px;\" id=\"e2-f3b8-0d80-bc09-8f46-c84d-4606-cd23-2598\" data-square=\"e2\"></div><div class=\"square-55d63 black-3c85d square-f2\" style=\"width:62px;height:62px;\" id=\"f2-5548-edf8-12b5-f952-8e7c-7ca8-7cac-7013\" data-square=\"f2\"></div><div class=\"square-55d63 white-1e1d7 square-g2\" style=\"width:62px;height:62px;\" id=\"g2-60ea-71e4-e73b-81be-bc58-9b90-324b-a8de\" data-square=\"g2\"></div><div class=\"square-55d63 black-3c85d square-h2\" style=\"width:62px;height:62px;\" id=\"h2-bf72-cc52-a4eb-7b99-cc84-39e5-142d-b299\" data-square=\"h2\"></div><div class=\"clearfix-7da63\"></div></div><div class=\"row-5277c\"><div class=\"square-55d63 black-3c85d square-a1\" style=\"width:62px;height:62px;\" id=\"a1-d9f2-3ea9-27dc-effe-910b-c212-e534-3b37\" data-square=\"a1\"><div class=\"notation-322f9 alpha-d2270\">a</div><div class=\"notation-322f9 numeric-fc462\">1</div></div><div class=\"square-55d63 white-1e1d7 square-b1\" style=\"width:62px;height:62px;\" id=\"b1-58a1-4cac-b46d-f9b0-e367-2084-2bfd-8b76\" data-square=\"b1\"><div class=\"notation-322f9 alpha-d2270\">b</div></div><div class=\"square-55d63 black-3c85d square-c1\" style=\"width:62px;height:62px;\" id=\"c1-db22-eedf-14c3-7c90-fc24-b76e-835f-704b\" data-square=\"c1\"><div class=\"notation-322f9 alpha-d2270\">c</div></div><div class=\"square-55d63 white-1e1d7 square-d1\" style=\"width:62px;height:62px;\" id=\"d1-a24c-842e-9b79-2d55-580b-fb9c-d37a-354a\" data-square=\"d1\"><div class=\"notation-322f9 alpha-d2270\">d</div></div><div class=\"square-55d63 black-3c85d square-e1\" style=\"width:62px;height:62px;\" id=\"e1-f257-3dc6-83bb-d8b3-39ff-191b-efcc-869d\" data-square=\"e1\"><div class=\"notation-322f9 alpha-d2270\">e</div></div><div class=\"square-55d63 white-1e1d7 square-f1\" style=\"width:62px;height:62px;\" id=\"f1-546d-f515-bf31-c2f7-2376-fa97-0676-de08\" data-square=\"f1\"><div class=\"notation-322f9 alpha-d2270\">f</div></div><div class=\"square-55d63 black-3c85d square-g1\" style=\"width:62px;height:62px;\" id=\"g1-41b7-ac80-9833-2891-ae73-0c3d-9a1a-f846\" data-square=\"g1\"><div class=\"notation-322f9 alpha-d2270\">g</div></div><div class=\"square-55d63 white-1e1d7 square-h1\" style=\"width:62px;height:62px;\" id=\"h1-894e-d5e9-48ad-6767-8b46-2d42-8fbe-45b7\" data-square=\"h1\"><div class=\"notation-322f9 alpha-d2270\">h</div></div><div class=\"clearfix-7da63\"></div></div></div></div></div>\n    </div>\n\n\n\n",
      "type": "html"
    },
    {
      "code": "<style>\n  #status {\n            font-size: 24px;\n            font-weight: bold;\n            margin-top: 20px;\n            text-align: center;\n        }\n\n        /* Default color for the status message */\n        #status.default {\n            color: #333;\n        }\n\n        /* White's turn */\n        #status.white-turn {\n            color: white;\n            background-color: #333;\n            padding: 10px;\n        }\n\n        /* Black's turn */\n        #status.black-turn {\n            color: black;\n            background-color: #ddd;\n            padding: 10px;\n        }\n\n        /* Game over with checkmate */\n        #status.checkmate {\n            color: white;\n            background-color: red;\n            padding: 15px;\n            font-size: 28px;\n        }\n\n        /* Game over with draw/stalemate */\n        #status.draw {\n            color: black;\n            background-color: yellow;\n            padding: 15px;\n            font-size: 28px;\n        }\n</style>",
      "status": "",
      "output": "<style>\n  #status {\n            font-size: 24px;\n            font-weight: bold;\n            margin-top: 20px;\n            text-align: center;\n        }\n\n        /* Default color for the status message */\n        #status.default {\n            color: #333;\n        }\n\n        /* White's turn */\n        #status.white-turn {\n            color: white;\n            background-color: #333;\n            padding: 10px;\n        }\n\n        /* Black's turn */\n        #status.black-turn {\n            color: black;\n            background-color: #ddd;\n            padding: 10px;\n        }\n\n        /* Game over with checkmate */\n        #status.checkmate {\n            color: white;\n            background-color: red;\n            padding: 15px;\n            font-size: 28px;\n        }\n\n        /* Game over with draw/stalemate */\n        #status.draw {\n            color: black;\n            background-color: yellow;\n            padding: 15px;\n            font-size: 28px;\n        }\n</style>",
      "type": "html"
    },
    {
      "code": "await scrib.loadScript(\"https://code.jquery.com/jquery-3.5.1.min.js\");\nawait scrib.loadScript(\"https://unpkg.com/@chrisoakman/chessboardjs@1.0.0/dist/chessboard-1.0.0.min.js\");\nawait scrib.loadScript(\"https://cdnjs.cloudflare.com/ajax/libs/chess.js/0.10.3/chess.min.js\")\nawait scrib.loadCSS(\"https://unpkg.com/@chrisoakman/chessboardjs@1.0.0/dist/chessboard-1.0.0.min.css\");\n<!-- Add Firebase SDK (for Realtime Database) -->",
      "status": "[66]<br><span style=\"font-size:8px\">62ms<span></span></span>",
      "output": "",
      "type": "code"
    },
    {
      "code": "const firebaseAppModule = await import(\"https://www.gstatic.com/firebasejs/10.12.2/firebase-app.js\"); \nconst firebaseAuthModule = await import(\"https://www.gstatic.com/firebasejs/10.12.2/firebase-auth.js\"); \nconst firebaseFirestoreModule = await import(\"https://www.gstatic.com/firebasejs/10.12.2/firebase-firestore.js\"); \nconst { initializeApp } = firebaseAppModule;\nconst { getAuth } = firebaseAuthModule;\nconst { getFirestore } = firebaseFirestoreModule; // Initialize Firebase Configuration\nconst firebaseConfig = { apiKey: \"AIzaSyAJrRZ6xehvVQk0PuCMhsVNfeNsJzXVmCY\", authDomain: \"vchess-82304.firebaseapp.com\", databaseURL: \"https://vchess-82304-default-rtdb.asia-southeast1.firebasedatabase.app\", projectId: \"vchess-82304\", storageBucket: \"vchess-82304.firebasestorage.app\", messagingSenderId: \"630416421002\", appId: \"1:630416421002:web:604dabeccb74ac778f7d73\", measurementId: \"G-YF3S8Y3FPK\" }; // Initialize Firebase App and services \nconst app = initializeApp(firebaseConfig); \nconst auth = getAuth(app);\nconst db = getFirestore(app); console.log(\"Firebase initialized:\", app);\n\n\n",
      "status": "[69]<br><span style=\"font-size:8px\">174ms<span></span></span>",
      "output": "",
      "type": "code"
    },
    {
      "code": "<style>\n        /* Status message styles */\n        #status {\n            font-size: 24px;\n            font-weight: bold;\n            margin-top: 20px;\n            text-align: center;\n        }\n\n        /* Default color for the status message */\n        #status.default {\n            color: #333;\n        }\n\n        /* White's turn */\n        #status.white-turn {\n            color: white;\n            background-color: #333;\n            padding: 10px;\n        }\n\n        /* Black's turn */\n        #status.black-turn {\n            color: black;\n            background-color: #ddd;\n            padding: 10px;\n        }\n\n        /* Game over with checkmate */\n        #status.checkmate {\n            color: white;\n            background-color: red;\n            padding: 15px;\n            font-size: 28px;\n        }\n\n        /* Game over with draw/stalemate */\n        #status.draw {\n            color: black;\n            background-color: yellow;\n            padding: 15px;\n            font-size: 28px;\n        }\n    </style>",
      "status": "",
      "output": "<style>\n        /* Status message styles */\n        #status {\n            font-size: 24px;\n            font-weight: bold;\n            margin-top: 20px;\n            text-align: center;\n        }\n\n        /* Default color for the status message */\n        #status.default {\n            color: #333;\n        }\n\n        /* White's turn */\n        #status.white-turn {\n            color: white;\n            background-color: #333;\n            padding: 10px;\n        }\n\n        /* Black's turn */\n        #status.black-turn {\n            color: black;\n            background-color: #ddd;\n            padding: 10px;\n        }\n\n        /* Game over with checkmate */\n        #status.checkmate {\n            color: white;\n            background-color: red;\n            padding: 15px;\n            font-size: 28px;\n        }\n\n        /* Game over with draw/stalemate */\n        #status.draw {\n            color: black;\n            background-color: yellow;\n            padding: 15px;\n            font-size: 28px;\n        }\n    </style>",
      "type": "html"
    },
    {
      "code": "// Initialize SpeechRecognition and set properties\nvar SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\nvar recognition = new SpeechRecognition();\nrecognition.lang = 'en-US';\nrecognition.interimResults = false;\nrecognition.maxAlternatives = 1;\n\n// Set flags to manage the state\nlet isRecognitionActive = false;\n\n// Handle recognition errors\nrecognition.onerror = function(event) {\n  console.error(\"Speech recognition error:\", event.error);\n  scrib.show(\"Speech recognition error:\", event.error);\n};\n\n// Handle start and end events\nrecognition.onstart = function() {\n  isRecognitionActive = true;\n  console.log(\"Speech recognition started.\");\n  scrib.show(\"Speech recognition started. Please speak your move.\");\n};\n\nrecognition.onend = function() {\n  isRecognitionActive = false;\n  console.log(\"Speech recognition stopped.\");\n  scrib.show(\"Speech recognition stopped.\");\n};\n\n// Handle speech results\nrecognition.onresult = function(event) {\n  var transcript = event.results[0][0].transcript.toLowerCase();\n  console.log(\"Voice command received:\", transcript);\n  scrib.show(\"Voice command received:\", transcript);\n  processVoiceCommand(transcript);\n};\n\n// Function to start recognition safely\nfunction startRecognition() {\n  if (isRecognitionActive) {\n    recognition.stop(); // Stop recognition if already active\n  }\n  recognition.start(); // Start recognition\n}\n\n// Start listening on a button click\ndocument.getElementById('startVoiceControl').addEventListener('click', function() {\n  startRecognition();\n  console.log(\"Voice control started. Please speak your move.\");\n  scrib.show(\"Voice control started. Please speak your move.\");\n});\n\n// Process voice command and handle moves\nfunction processVoiceCommand(command) {\n  // Regular expression to capture \"move [piece] [source] to [target]\" pattern\n  var movePattern = /(?:move\\s+)?(?:(pawn|knight|bishop|rook|queen|king)\\s+)?([a-h][1-8])\\s+to\\s+([a-h][1-8])/i;\n  \n  // Check if the voice command matches the pattern\n  var moveMatch = command.match(movePattern);\n  \n  if (moveMatch) {\n    var piece = moveMatch[1] ? moveMatch[1].toLowerCase() : null; // Capture piece if specified\n    var sourceSquare = moveMatch[2];\n    var targetSquare = moveMatch[3];\n    \n    // If no piece specified, detect piece on the source square\n    if (!piece) {\n      var pieceOnSource = game.get(sourceSquare);\n      if (pieceOnSource) {\n        piece = pieceOnSource.type; // Get piece type from board\n      } else {\n        scrib.show(`No piece found on ${sourceSquare}. Try a valid source square.`);\n        return;\n      }\n    }\n\n    // Map pieces to their chess notation\n    var pieceNotation = {\n      p: '',   // Pawn (no notation)\n      n: 'N',  // Knight\n      b: 'B',  // Bishop\n      r: 'R',  // Rook\n      q: 'Q',  // Queen\n      k: 'K'   // King\n    };\n    var pieceSymbol = pieceNotation[piece[0]];\n\n    // Find the valid source square for the piece and target square\n    var sourceSquareFound = findSourceSquare(pieceSymbol, sourceSquare, targetSquare);\n\n    if (sourceSquareFound) {\n      // Execute the move if it's legal\n      var move = game.move({\n        from: sourceSquareFound,\n        to: targetSquare,\n        promotion: 'q' // Auto-promote to queen\n      });\n\n      if (move) {\n        board2.position(game.fen());\n        updateStatus();\n        updateMoveHistory(move.san);\n        scrib.show(`Move executed: ${piece} from ${sourceSquareFound} to ${targetSquare}`);\n      } else {\n        scrib.show(\"Illegal move. Try again.\");\n        console.error(\"Illegal move attempted:\", sourceSquareFound, \"to\", targetSquare);\n      }\n    } else {\n      scrib.show(\"Could not determine a valid source square for the move.\");\n    }\n  } else {\n    scrib.show(\"Invalid command format. Please say moves like 'move e2 to e3' or 'move knight g1 to f3'.\");\n  }\n}\n\n// Find source square for specified piece and target\nfunction findSourceSquare(pieceSymbol, sourceSquare, targetSquare) {\n  var moves = game.moves({ verbose: true });\n  var matchingMoves = moves.filter(function(m) {\n    return (!pieceSymbol || m.piece === pieceSymbol.toLowerCase()) && m.from === sourceSquare && m.to === targetSquare;\n  });\n\n  return matchingMoves.length > 0 ? matchingMoves[0].from : null;\n}\n\n\n// Chessboard and game event functions\nvar board2 = ChessBoard('board2', {\n      draggable: true,\n      pieceTheme: 'https://chessboardjs.com/img/chesspieces/alpha/{piece}.png',\n      dropOffBoard: 'trash',\n      onDragStart: onDragStart,\n      onDrop: onDrop,\n      onSnapEnd: onSnapEnd\n    });\n\n    var game = new Chess();\n    var gameOver = false; // Flag to track if the game is over\n\n    // Function to prevent illegal moves or moves by the wrong player\n    function onDragStart(source, piece, position, orientation) {\n      if (gameOver) return false; // Disable dragging if the game is over\n      if ((game.turn() === 'w' && piece.startsWith('b')) || \n          (game.turn() === 'b' && piece.startsWith('w'))) {\n        return false;\n      }\n    }\n\n    // Function to handle piece drop and validate move\n    function onDrop(source, target) {\n      if (gameOver) return 'snapback'; // Disable dropping if the game is over\n\n      var move = game.move({\n        from: source,\n        to: target,\n        promotion: 'q'  // Auto-promote to queen for simplicity\n      });\n\n      if (move === null) return 'snapback';  // Illegal move\n      updateStatus();  // Update game status after each valid move\n      updateMoveHistory(move.san);  // Add the move to the move history\n    }\n\n    // Sync board position with game state after each move\n    function onSnapEnd() {\n      board2.position(game.fen());\n    }\n\n    // Function to update board and game status\n    function updateStatus() {\n      var status = '';\n\n      if (game.in_checkmate()) {\n        status = 'Game over, ' + (game.turn() === 'w' ? 'White' : 'Black') + ' is in checkmate.';\n        gameOver = true; // Set game over flag\n      } else if (game.in_draw() || game.in_stalemate() || game.in_threefold_repetition() || game.insufficient_material()) {\n        status = 'Game over, it\\'s a draw!';\n        gameOver = true; // Set game over flag\n      } else {\n        status = (game.turn() === 'w' ? 'White' : 'Black') + ' to move';\n        if (game.in_check()) {\n          status += ', in check!';\n        }\n      }\n\n      document.getElementById('status').innerText = status; // Display status message\n    }\n\n    // Function to update move history display\n    var moveHistory = []; // To store the move history\n\n    function updateMoveHistory(move) {\n  // Add the move to the history\n  moveHistory.push(move);\n\n  // Keep only the most recent 8 moves\n  if (moveHistory.length > 8) {\n    moveHistory.shift(); // Remove the oldest move\n  }\n\n  // Update the move list display\n  var movesList = document.getElementById('movesList');\n  movesList.innerHTML = ''; // Clear the current move list\n\n  // Iterate over the history and display moves in the required format\n  moveHistory.forEach(function (move, index) {\n    // If it's the first move (index 0), calculate the turn explicitly\n    var currentTurn = (index % 2 === 0) ? 'w' : 'b'; // White moves first (even index is white)\n\n    // Get the color and piece from the move and format it\n    var moveText = formatMove(move, currentTurn); // Use calculated turn for formatting\n    var moveItem = document.createElement('div');\n    moveItem.textContent = moveText;\n    movesList.appendChild(moveItem);\n  });\n}\n\n\n    // Format the move as \"white-pawn-d6\" or \"black-pawn-d5\"\nfunction formatMove(move, turn) {\n  // Determine the color of the player making the move\n  var color = (turn === 'w') ? 'white' : 'black'; // 'w' for white and 'b' for black\n  \n  // Map the first character to the piece type\n  var piece;\n  var moveIndex = 0;  // To track if the move starts with a piece character\n  \n  // Check if the first character is a valid piece (Knight, Rook, King, Queen)\n  if (move.charAt(0) === 'N') {\n    piece = 'knight';\n    moveIndex = 1;  // Skip the first character (since it's part of the piece)\n  } else if (move.charAt(0) === 'R') {\n    piece = 'rook';\n    moveIndex = 1;\n  } else if (move.charAt(0) === 'K') {\n    piece = 'king';\n    moveIndex = 1;\n  } else if (move.charAt(0) === 'Q') {\n    piece = 'queen';\n    moveIndex = 1;\n  } else if (move.charAt(0) === 'B') {\n    piece = 'bishop';\n    moveIndex = 1;\n  } else {\n    piece = 'pawn';  // If no piece character, it's a pawn\n    moveIndex = 0;  // No need to skip any character\n  }\n\n  // Remove any capture or check symbols for easier parsing\n  var cleanedMove = move.replace(/[x+]/g, ''); // Remove 'x' (captures) and '+' (checks)\n\n  // Determine the target square (last two characters of the move)\n  var targetSquare = cleanedMove.slice(-2);\n\n  // Handle pawn captures and simple moves\n  if (piece === 'pawn') {\n    if (move.length > 3) {\n      // Pawn capture move (e.g., e5xd6 -> white-pawn-e5-x-d6)\n      var captureSquare = move.slice(2, 4);  // Capture destination (e.g., \"d6\" in e5xd6)\n      return color + '-pawn-' + '-x-' + captureSquare;\n    } else {\n      // Simple pawn move (e.g., e2-e4 -> white-pawn-e4)\n      return color + '-pawn-' + targetSquare;\n    }\n  } else {\n    // Handle non-pawn pieces (e.g., Knight, Rook, etc.)\n    var capture = move.includes('x'); // Check if it's a capture (e.g., Rxd4)\n\n    if (capture) {\n      // Format capture moves (e.g., Rook capture: Rxd5 -> white-rook-d4-x-d5)\n      return color + '-' + piece + '-' + '-x-' + targetSquare;\n    } else {\n      // Non-capture piece move (e.g., Knight move: Nf3 -> white-knight-f3)\n      return color + '-' + piece + '-' + targetSquare;\n    }\n  }\n}\n\n\n\n\n    // Button controls to reset and clear the board\n    document.getElementById('startBtn').addEventListener('click', function() {\n      game.reset();  // Reset chess game\n      board2.start(); // Reset chessboard visualization\n      gameOver = false; // Reset game over flag\n      updateStatus(); // Update the status\n      document.getElementById('movesList').innerHTML = '';  // Clear the move history\n\t  moveHistory = [];\n    });\n\n    document.getElementById('clearBtn').addEventListener('click', function() {\n      game.clear();   // Clear chess game\n      board2.clear(); // Clear chessboard visualization\n      gameOver = false; // Reset game over flag\n      document.getElementById('status').innerText = 'Board cleared.'; // Clear status\n      document.getElementById('movesList').innerHTML = '';  // Clear the move history\n    });\n\n    updateStatus();",
      "status": "[68]<br><span style=\"font-size:8px\">21ms<span></span></span>",
      "output": "",
      "type": "code"
    }
  ],
  "source": "https://github.com/gopi-suvanam/jsnb",
  "run_on_load": false
}